

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (15 October 2023 23:02:32) as /home/fran/Downloads/linux64/CuisUniversity-5981.image!


----End fileIn of /home/fran/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FK 10/15/2023 23:06:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FK 10/15/2023 23:06:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FK 10/15/2023 23:06:32'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FK 10/15/2023 23:06:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FK 10/15/2023 23:06:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FK 10/15/2023 23:06:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FK 10/15/2023 23:06:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FK 10/15/2023 23:06:32'!
FAILURE!
!Deposit methodsFor: 'nil' stamp: 'FK 10/15/2023 23:07:35'!
addToBalance: aBalance
	^aBalance + value.! !
!Withdraw methodsFor: 'nil' stamp: 'FK 10/15/2023 23:09:06'!
addToBalance: aBalance
	^aBalance - value.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'FK 10/15/2023 23:10:13' prior: 50650535!
balance

	^transactions inject: 0 into: [ :balance :aTransaction | aTransaction addToBalance: balance ].! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'FK 10/15/2023 23:10:21' prior: 50650586!
balance

	^transactions inject: 0 into: [ :balance :aTransaction | aTransaction addToBalance: balance].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FK 10/15/2023 23:10:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FK 10/15/2023 23:10:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FK 10/15/2023 23:10:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FK 10/15/2023 23:10:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FK 10/15/2023 23:10:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FK 10/15/2023 23:10:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FK 10/15/2023 23:10:27'!
PASSED!

TestCase subclass: #PortfolioTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/15/2023 23:15:20'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'FK 10/15/2023 23:16:42'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'nil' stamp: 'FK 10/15/2023 23:16:19'!
test01ANewPortfolioHas0Balance
	self assertThat: (Portfolio new) balance isEqualTo: 0.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:16:46'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/15/2023 23:16:55'!
balance
	^0! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:17:01'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:17:01'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:17:15' prior: 50650645!
test01ANewPortfolioHas0Balance
	self assertThat: (Portfolio new balance) isEqualTo: 0.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:17:16'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:17:43' prior: 50650663!
test01ANewPortfolioHas0Balance
	self assert: (Portfolio new balance) = 0.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:17:45'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:17:45'!
PASSED!
!PortfolioTests methodsFor: 'nil' stamp: 'FK 10/15/2023 23:21:56'!
test02PortfolioWith1Account
	| portfolio account |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:23:01' prior: 50650683!
test02PortfolioWith1Account
	| portfolio account |
	portfolio := Portfolio new.
	account := (ReceptiveAccount new) register: (Deposit ).
	portfolio addAccount: account.
	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:23:53' prior: 50650691!
test02PortfolioWith1Account
	| portfolio account |
	portfolio := Portfolio new.
	account := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio addAccount: account.
	self assert: (portfolio balance) = 10.
	! !

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:23:55'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/15/2023 23:24:20'!
addAccount: anAccount
	! !

Portfolio class
	instanceVariableNames: 'portfolios accounts'!

!classDefinition: 'Portfolio class' category: 'Portfolio-Ejercicio' stamp: 'FK 10/15/2023 23:24:28'!
Portfolio class
	instanceVariableNames: 'portfolios accounts'!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'FK 10/15/2023 23:24:55'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:25:20' prior: 50650712!
addAccount: anAccount
	accounts add: anAccount .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:25:22' prior: 50650736!
addAccount: anAccount
	accounts add: anAccount.! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/15/2023 23:25:45' overrides: 16920235!
initialize
	portfolios := OrderedCollection new.
	accounts := OrderedCollection new.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:25:48'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:25:48'!
FAILURE!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:25:48'!
FAILURE!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:26:18'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:26:18'!
FAILURE!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:26:18'!
FAILURE!

self balance!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:27:21' prior: 50650700!
test02PortfolioWith1Account
	| portfolio account |
	portfolio := Portfolio new.
	account := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio addAccount: account.
	self assert: (portfolio balance) equals: 10.
	! !

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:27:22'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:28:07' prior: 50650653!
balance
	^ accounts sum: [ :account | account balance ] .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:28:20' prior: 50650785!
balance
	^ accounts sum: [:account | account balance].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:28:23'!
ERROR!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:28:23'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:28:23'!
ERROR!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:28:27'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:28:29'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:28:29'!
ERROR!

#(1 2 3) sum: [ :num | num ]!

#() sum: [ :num | num ]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:29:32' prior: 50650790!
balance
	^ accounts inject: 0 into: [:account | account balance] .! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:29:33'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:29:33'!
ERROR!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:29:33'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:29:51' prior: 50650815!
balance
	^ accounts inject: 0 into: [ :balance :account | balance + account balance] .! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:29:52'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:29:52'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:30:16' prior: 50650830!
balance
	^ accounts sum: [:account | account balance] ifEmpty: 0.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:30:17'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:30:17'!
PASSED!
!PortfolioTests methodsFor: 'nil' stamp: 'FK 10/15/2023 23:35:12'!
test03BalancePortfolioWith1Porfolio
	| portfolio |
	portfolio := (Portfolio new) addPortfolio: 
		(Portfolio new addAccount: (ReceptiveAccount new register: (Deposit for: 10))).
	
	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:35:34' prior: 50650853!
test03BalancePortfolioWith1Porfolio
	| portfolio |
	portfolio := (Portfolio new) addPortfolio: 
		(Portfolio new addAccount: (ReceptiveAccount new register: (Deposit for: 10))).
	
	self assert: (portfolio balance) equals: 10.! !

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/15/2023 23:35:41'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/15/2023 23:36:22'!
addPortfolio: aPortfolio
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:36:26'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:36:26'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/15/2023 23:36:26'!
FAILURE!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/15/2023 23:36:26'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:37:34' prior: 50650842!
balance
	^
	 (accounts sum: [:account | account balance] ifEmpty: 0) + 
          (portfolios sum: [:portfolio | portfolio balance] ifEmpty: 0).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:37:37'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:37:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/15/2023 23:37:37'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:37:48' prior: 50650893!
balance
	^(accounts sum: [:account | account balance] ifEmpty: 0) + 
          (portfolios sum: [:portfolio | portfolio balance] ifEmpty: 0).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:37:52' prior: 50650910!
balance
	^(accounts sum: [:account | account balance] ifEmpty: 0) + 
          (portfolios sum: [:portfolio | portfolio balance] ifEmpty: 0).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:37:52'!
PASSED!

!testRun: #PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:37:52'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/15/2023 23:37:52'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:39:26'!
test02BalancePortfolioWith1Account
	| portfolio account |
	portfolio := Portfolio new.
	account := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio addAccount: account.
	self assert: (portfolio balance) equals: 10.
	! !

!methodRemoval: PortfolioTests #test02PortfolioWith1Account stamp: 'FK 10/15/2023 23:39:26'!
test02PortfolioWith1Account
	| portfolio account |
	portfolio := Portfolio new.
	account := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio addAccount: account.
	self assert: (portfolio balance) equals: 10.
	!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:50:58'!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 25).
	account2 := ((ReceptiveAccount new) register: (Deposit for: 30)) register: (Withdraw for: 15).
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio1.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 balance) equals: 40.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/15/2023 23:53:16' prior: 50650955!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 25).
	account2 := ((ReceptiveAccount new) register: (Deposit for: 30)) register: (Withdraw for: 15).
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 balance) equals: 40.! !

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/15/2023 23:53:17'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/15/2023 23:53:17'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/15/2023 23:53:17'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/15/2023 23:53:17'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/15/2023 23:53:17'!
PASSED!

----SNAPSHOT----(15 October 2023 23:55:29) CuisUniversity-5981.image priorSource: 10197292!

----STARTUP---- (16 October 2023 22:16:58) as /home/fran/Downloads/linux64/CuisUniversity-5981.image!

!PortfolioTests methodsFor: 'nil' stamp: 'FK 10/16/2023 22:23:09'!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:25:07' prior: 50651025!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self should:  ((Portfolio new) addAccount: 1) raise: Portfolio notAnAccountErrorDescription.! !
!Portfolio class methodsFor: 'nil' stamp: 'FK 10/16/2023 22:25:37'!
notAnAccountErrorDescription
	^'Only accounts or portfolios can be registered'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:26:14'!
notAnAccountOrPortfolioErrorDescription
	^'Only accounts or portfolios can be registered'! !

!methodRemoval: Portfolio class #notAnAccountErrorDescription stamp: 'FK 10/16/2023 22:26:21'!
notAnAccountErrorDescription
	^'Only accounts or portfolios can be registered'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:26:29' prior: 50651030!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self should:  ((Portfolio new) addAccount: 1) raise: Portfolio notAnAccountOrPortfolioErrorDescription.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:26:36' prior: 50651055!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self should:  ((Portfolio new) addAccount: 1) raise: (Portfolio notAnAccountOrPortfolioErrorDescription).! !

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:26:37'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:27:20' prior: 50650741!
addAccount: anAccount
	self safelyAddAccount: anAccount.
! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/16/2023 22:29:07'!
safelyAddAccount: anAccount
	(anAccount isKindOf: (ReceptiveAccount))
		 ifFalse: [^self error: (self class) notAnAccountOrPortfolioErrorDescription].
	accounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:30:10'!
safelyAddPortfolio: anAccount
	(anAccount isKindOf: (Portfolio))
		 ifFalse: [^self error: (self class) notAnAccountOrPortfolioErrorDescription].
	portfolios add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:30:21' prior: 50651089!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: (Portfolio))
		 ifFalse: [^self error: (self class) notAnAccountOrPortfolioErrorDescription].
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:30:36'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:30:36'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:30:36'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:30:36'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:30:36'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:30:36'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:31:01' prior: 50651064!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self should:  ((Portfolio new) addAccount: 1) raise: Error description: (Portfolio notAnAccountOrPortfolioErrorDescription).! !

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:31:03'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:31:14' prior: 50651128!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self should:  ((Portfolio new) addAccount: 1) raise: Error description: [(Portfolio notAnAccountOrPortfolioErrorDescription)].! !

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:31:17'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:31:24' prior: 50651141!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self should:  [((Portfolio new) addAccount: 1)] raise: Error description: [(Portfolio notAnAccountOrPortfolioErrorDescription)].! !

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:31:25'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:31:25'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:31:25'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:31:25'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:31:25'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:31:25'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:31:56' prior: 50651154!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self
	should:  [Portfolio new addAccount: 1] 
	raise: Error 
	description: [(Portfolio notAnAccountOrPortfolioErrorDescription)].! !

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:31:57'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:31:57'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:31:57'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:31:57'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:31:57'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:31:57'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:32:03' prior: 50651185!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self
	should:  [Portfolio new addAccount: 1] 
	raise: Error 
	description: [Portfolio notAnAccountOrPortfolioErrorDescription].! !

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:32:04'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:32:04'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:32:04'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:32:04'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:32:04'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:32:04'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:32:22'!
test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio
	self
	should:  [Portfolio new addAccount: 1] 
	raise: Error 
	description: [Portfolio notAnAccountOrPortfolioErrorDescription].! !

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:32:24'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:32:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:32:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:32:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:32:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:32:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:32:24'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:32:41' prior: 50651246!
test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio
	self
	should:  [Portfolio new addPortfolio: 1] 
	raise: Error 
	description: [Portfolio notAnAccountOrPortfolioErrorDescription].! !

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:32:42'!
FAILURE!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:32:42'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:33:00' prior: 50650875!
addPortfolio: aPortfolio
	self safelyAddPortfolio: aPortfolio ! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:33:02'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:33:02'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:33:02'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:33:02'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:33:02'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:33:02'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:43:24'!
test07HasRegisteredWith0Accounts
	self deny: Portfolio new hasRegistered: (Deposit for: 1).! !

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:43:26'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:43:34' prior: 50651324!
test07HasRegisteredWith0Accounts
	self deny: (Portfolio new hasRegistered: (Deposit for: 1)).! !

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:43:35'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/16/2023 22:44:19'!
hasRegistered: aTransaction
	^false! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:44:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:44:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:44:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:44:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:44:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:44:24'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:44:24'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:46:20'!
test07HasRegisteredWith1Account
	| account portfolio |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	account register: (Deposit for: 1).
	portfolio addAccount: account.
	self assert: (portfolio hasRegistered: account).! !

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:46:22'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:47:12' prior: 50651372!
test07HasRegisteredWith1Account
	| account portfolio transaction|
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 1.
	account register: (Deposit for: 1).
	portfolio addAccount: account.
	self assert: (portfolio hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:47:22' prior: 50651386!
test07HasRegisteredWith1Account
	| account portfolio transaction|
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 1.
	account register: (transaction).
	portfolio addAccount: account.
	self assert: (portfolio hasRegistered: transaction).! !

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:47:24'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:47:34' prior: 50651399!
test07HasRegisteredWith1Account
	| account portfolio transaction|
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 1.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio hasRegistered: transaction).! !

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:47:34'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:48:07' prior: 50651343!
hasRegistered: aTransaction
	^false! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:50:08' prior: 50651430!
hasRegistered: aTransaction
	^(accounts detect: [ :anAccount | anAccount hasRegistered: aTransaction] ifNone: [^False]).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:50:09'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:50:09'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:50:09'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:50:09'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:50:09'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:50:09'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:50:09'!
ERROR!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:50:09'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:50:14' prior: 50651435!
hasRegistered: aTransaction
	^(accounts detect: [ :anAccount | anAccount hasRegistered: aTransaction] ifNone: [^false]).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:50:15'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:50:15'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:50:15'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:50:15'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:50:15'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:50:15'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:50:15'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:50:15'!
ERROR!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:50:15'!
ERROR!

----End fileIn of /home/fran/Downloads/linux64/Packages/TerseGuide.pck.st----!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:51:35' prior: 50651470!
hasRegistered: aTransaction
	^(accounts detect: [ :anAccount | anAccount hasRegistered: aTransaction] ifFound: [^true] ifNone: [^false]).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:51:37'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:51:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:51:37'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:51:37'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:51:37'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:51:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:51:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:51:37'!
ERROR!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:51:37'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:51:46'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:51:46'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:51:46'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:51:46'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:51:46'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:51:46'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:51:46'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:51:46'!
ERROR!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:51:46'!
ERROR!

ReceptiveAccount!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:53:01' prior: 50654427!
hasRegistered: aTransaction
	^(accounts detect: [ :anAccount | anAccount hasRegistered: aTransaction] ifFound: [:foundAccount |^true] ifNone: [^false]).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:53:02'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:53:02'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:53:02'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:53:02'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:53:02'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:53:02'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:53:02'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:53:02'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:53:24' prior: 50654497!
hasRegistered: aTransaction
	^accounts
		 detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		 ifFound: [:foundAccount |^true] 
		 ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:53:42' prior: 50654533!
hasRegistered: aTransaction
	^accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [^false].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:53:43'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:53:43'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:53:43'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:53:43'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:53:43'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:53:43'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:53:43'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:53:43'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:54:12'!
test08HasRegisteredWith1Account
	| account portfolio transaction|
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 1.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio hasRegistered: transaction).! !

!methodRemoval: PortfolioTests #test07HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:54:13'!
test07HasRegisteredWith1Account
	| account portfolio transaction|
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 1.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio hasRegistered: transaction).!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:54:16'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 22:54:18'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 22:54:18'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 22:54:18'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 22:54:18'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 22:54:18'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 22:54:18'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 22:54:18'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 22:54:18'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:59:44'!
test09HasRegisteredWith1PortfolioThatHas1Account
	| account portfolio portfolio2 transaction|
	portfolio := Portfolio new.
	portfolio2  := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 1.
	account register: transaction.
	portfolio addAccount: account.
	portfolio2 addPortfolio: portfolio.
	self assert: (portfolio2 hasRegistered: transaction).! !

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 22:59:44'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 22:59:54' prior: 50654632!
test09HasRegisteredWith1PortfolioThatHas1Account
	| account portfolio portfolio2 transaction|
	portfolio := Portfolio new.
	portfolio2 := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 1.
	account register: transaction.
	portfolio addAccount: account.
	portfolio2 addPortfolio: portfolio.
	self assert: (portfolio2 hasRegistered: transaction).! !

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 22:59:55'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:00:12' prior: 50654542!
hasRegistered: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:00:42' prior: 50654670!
hasRegistered: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [^false].
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [:foundPortfolio |^true] 
		ifNone: [^false].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:00:43'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:00:43'!
FAILURE!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:00:43'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:01:45' prior: 50654678!
hasRegistered: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [
			portfolios 
				detect: [ :portfolio | portfolio hasRegistered: aTransaction]
				ifFound: [:foundPortfolio |^true] 
				ifNone: [^false].
		]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:01:47'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:01:47'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:01:54' prior: 50654726!
hasRegistered: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [
			portfolios 
				detect: [ :portfolio | portfolio hasRegistered: aTransaction]
				ifFound: [:foundPortfolio |^true] 
				ifNone: [^false]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:01:58' prior: 50654770!
hasRegistered: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [portfolios 
				detect: [ :portfolio | portfolio hasRegistered: aTransaction]
				ifFound: [:foundPortfolio |^true] 
				ifNone: [^false]].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:01:59'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:01:59'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:05:24' prior: 50654783!
hasRegistered: aTransaction
	self xxx: aTransaction.! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/16/2023 23:07:34'!
xxx: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [self yyy: aTransaction].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:08:03'!
yyy: aTransaction
	portfolios 
	detect: [ :portfolio | portfolio hasRegistered: aTransaction]
	ifFound: [:foundPortfolio |^true] 
	ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:08:09' prior: 50654831!
xxx: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [self yyy: aTransaction].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:12:37'!
searchTransactionInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [^false].! !

!methodRemoval: Portfolio #xxx: stamp: 'FK 10/16/2023 23:12:41'!
xxx: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [self yyy: aTransaction].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:13:29'!
searchTransactionInPortfolios: aTransaction
	portfolios 
	detect: [ :portfolio | portfolio hasRegistered: aTransaction]
	ifFound: [:foundPortfolio |^true] 
	ifNone: [^false]! !

!methodRemoval: Portfolio #yyy: stamp: 'FK 10/16/2023 23:13:31'!
yyy: aTransaction
	portfolios 
	detect: [ :portfolio | portfolio hasRegistered: aTransaction]
	ifFound: [:foundPortfolio |^true] 
	ifNone: [^false]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:15:05' prior: 50654827!
hasRegistered: aTransaction
	(self searchTransactionInAccounts: aTransaction) or: [self searchTransactionInPortfolios: aTransaction].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:15:41'!
isInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:15:41' prior: 50654887!
hasRegistered: aTransaction
	(self isInAccounts: aTransaction) or: [self searchTransactionInPortfolios: aTransaction].! !

!methodRemoval: Portfolio #searchTransactionInAccounts: stamp: 'FK 10/16/2023 23:15:41'!
searchTransactionInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [:foundAccount |^true] 
		ifNone: [^false].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:16:01'!
isInPortfolios: aTransaction
	portfolios 
	detect: [ :portfolio | portfolio hasRegistered: aTransaction]
	ifFound: [:foundPortfolio |^true] 
	ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:16:01' prior: 50654902!
hasRegistered: aTransaction
	(self isInAccounts: aTransaction) or: [self isInPortfolios: aTransaction].! !

!methodRemoval: Portfolio #searchTransactionInPortfolios: stamp: 'FK 10/16/2023 23:16:01'!
searchTransactionInPortfolios: aTransaction
	portfolios 
	detect: [ :portfolio | portfolio hasRegistered: aTransaction]
	ifFound: [:foundPortfolio |^true] 
	ifNone: [^false]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:16:05'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:16:05'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:16:05'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:16:05'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:16:05'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:16:05'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:16:05'!
ERROR!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:16:05'!
ERROR!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:16:05'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:16:43' prior: 50654925!
hasRegistered: aTransaction
	^(self isInAccounts: aTransaction) or: [self isInPortfolios: aTransaction].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:16:44'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:17:13'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:17:13'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:19:53'!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 25).
	account2 := ((ReceptiveAccount new) register: (Deposit for: 30)) register: (Withdraw for: 15).
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 hasRegistered: (Withdraw for: 15)).! !

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:19:55'!
FAILURE!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:20:02'!
FAILURE!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:20:28'!
FAILURE!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:20:52'!
FAILURE!

self isInPortfolios: (Withdraw for: 15)!

(portfolios first)!

Portfolio!

(portfolios first)!

(portfolios first) hasRegistered: (Withdraw for: 15)!

(self first)!

(self first) hasRegistered: (Withdraw for: 15)!

(self first) hasRegistered: (Withdraw for: 15)!

Portfolio!

a Portfolio!

self hasRegistered: (Withdraw for: 15)!

self hasRegistered: (Withdraw for: 15)!

self hasRegistered: (Withdraw for: 15)!

self hasRegistered: (Withdraw for: 10)!

self hasRegistered: (Deposit for: 30)!
!AccountTransaction methodsFor: 'nil' stamp: 'FK 10/16/2023 23:30:13' overrides: 16901772!
= anotherTransaction
	^(anotherTransaction class) = (self class) and: [anotherTransaction value = self value].! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:30:28' prior: 50655096 overrides: 16901772!
= anotherTransaction
	^((anotherTransaction class) = (self class)) and: [anotherTransaction value = self value].! !

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:31:15'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:31:26'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:31:30'!
PASSED!

----SNAPSHOT----(16 October 2023 23:31:44) CuisUniversity-5981.image priorSource: 10219790!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:32:43'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:32:43'!
PASSED!
!PortfolioTests methodsFor: 'nil' stamp: 'FK 10/16/2023 23:35:17'!
test11TransactionsEmptyPortfolio
	self assert: (Portfolio new) transactions isEmpty.! !

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/16/2023 23:35:18'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/16/2023 23:35:52'!
transactions
	^(OrderedCollection new).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:35:55'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/16/2023 23:35:55'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:15'!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (Portfolio new) transactions isEmpty.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:31' prior: 50655247!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: portfolio transactions isEmpty.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:47' prior: 50655259!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: portfolio transactions equals: #( transaction) .! !

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:44:48'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:58' prior: 50655271!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: portfolio transactions equals: #( transaction) asOrderedCollection .! !

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:44:59'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:45:27' prior: 50655204!
transactions
	^(accounts collect: [:anAccount | anAccount transactions]).! !

#( ) collect: [:a | a]!

#(1) collect: [:a | a]!

#(1 2 3) fold: [:a | OrderedCollection new] ifEmpty: []!

#(1 2 3) fold: [:a :b| OrderedCollection new] ifEmpty: []!

#( 1 2 3) reduce: [:a | a]!

#( 1 2 3) reduce: [:a :b | a]!

#(1 2 3) flatten!

#(#(1) 2 3) flatten!

#(#(1) #(2) #(3)) flatten!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:52:37' prior: 50655303!
transactions
	^(accounts collect: [ :anAccount | anAccount transactions]) flatten.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/16/2023 23:52:39'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:52:39'!
FAILURE!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:52:39'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:53:15' prior: 50655287!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio transactions) equals: (account transactions).! !

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/16/2023 23:53:16'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:53:16'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:53:26' prior: 50655369!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio transactions) equals: (OrderedCollection with: transaction ).! !

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/16/2023 23:53:27'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/16/2023 23:53:27'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:55:13'!
test13OneTransactionNestedInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio transactions) equals: (OrderedCollection with: transaction ).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:59:27' prior: 50655485!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 transactions ) equals: (OrderedCollection fromArray: #( transaction1 transaction2 transaction3))! !

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/16/2023 23:59:28'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:59:55' prior: 50655499!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 transactions ) equals: (OrderedCollection newFrom: #( transaction1 transaction2 transaction3))! !

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/16/2023 23:59:56'!
FAILURE!

#() class!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:00:31' prior: 50655532!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 transactions ) equals: (OrderedCollection with: #( transaction1 transaction2 transaction3))! !

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:00:32'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:01:27' prior: 50655565!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 expectedTransactions |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions ) equals: expectedTransactions.! !

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:01:28'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:03:09' prior: 50655318!
transactions
	^OrderedCollection with: (accounts collect: [ :anAccount | anAccount transactions] flatten)
					    with: (portfolios collect: [ :aPortfolio | aPortfolio transactions] flatten)! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:10'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:03:10'!
ERROR!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:03:10'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:03:10'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:03:16'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:17'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:03:17'!
ERROR!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:03:17'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:03:17'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:37'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:03:37'!
ERROR!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:03:37'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:03:37'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:03:57' prior: 50655635!
transactions
	^(OrderedCollection with: (accounts collect: [ :anAccount | anAccount transactions] flatten)
					    with: (portfolios collect: [ :aPortfolio | aPortfolio transactions] flatten)) flatten.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:03:58'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:03:58'!
ERROR!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:03:58'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:03:58'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:04:17' prior: 50655780!
transactions
	^(OrderedCollection with: (accounts collect: [ :anAccount | anAccount transactions])
					    with: (portfolios collect: [ :aPortfolio | aPortfolio transactions])) flatten.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:04:19'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:04:19'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:07:15'!
transactionsInAccounts
	^accounts collect: [ :anAccount | anAccount transactions]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:07:43'!
transactionsInPortfolios
	^portfolios collect: [ :aPortfolio | aPortfolio transactions].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:08:39' prior: 50655835!
transactions
	^(OrderedCollection with: (self transactionsInPortfolios ) with: (self transactionsInAccounts)) flatten.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:08:40'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:08:40'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:08:40'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:09:01' prior: 50655901!
transactions
	^(OrderedCollection with: (self transactionsInAccounts ) with: (self transactionsInPortfolios)) flatten.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:09:01'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:09:01'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:09:09' prior: 50655957!
transactions
	^(OrderedCollection with: (self transactionsInAccounts) with: (self transactionsInPortfolios)) flatten.! !

Set with: 1!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:12:22' prior: 50650746 overrides: 16920235!
initialize
	portfolios := Bag new.
	accounts := Bag new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:12:44' prior: 50656009!
transactions
	^((self transactionsInAccounts) add: (self transactionsInPortfolios)) flatten.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:12:46'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:12:46'!
ERROR!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:12:46'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:12:46'!
ERROR!

(Bag with: 1)!

(Bag with: 1) add: (Bag with: 2)!

(Bag with: 1) add: (Bag with: 2) flatten!

((Bag with: 1) add: (Bag with: 2)) flatten!

(Bag with: #(1) with: #(2)) flatten!

(Bag with: #(1) with: #(2)) !

(Bag with: #(1) with: #(2)) flatten!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:09:01' prior: 50656022!
transactions
	^(OrderedCollection with: (self transactionsInAccounts ) with: (self transactionsInPortfolios)) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:15:58' prior: 50656017 overrides: 16920235!
initialize
	portfolios := OrderedCollection new.
	accounts := OrderedCollection new.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:15:59'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:17:23'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:17:23'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:17:38' prior: 50655598!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 expectedTransactions |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions ) equals: expectedTransactions.! !

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:17:39'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:17:50'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:17:57'!
FAILURE!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:18:10'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:10'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:10'!
FAILURE!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:18:13'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:18:17'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:17'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:17'!
FAILURE!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:18:28'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:28'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:28'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:18:45' prior: 50656189!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 expectedTransactions |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions ) equals: expectedTransactions.! !

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 00:18:46'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 21:36:51'!
PASSED!

----STARTUP---- (17 October 2023 21:44:27) as /home/fran/Downloads/linux64/CuisUniversity-5981.image!

!PortfolioTests methodsFor: 'nil' stamp: 'FK 10/16/2023 23:35:17'!
test11TransactionsEmptyPortfolio
	self assert: (Portfolio new) transactions isEmpty.! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/16/2023 23:35:52'!
transactions
	^(OrderedCollection new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:15'!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (Portfolio new) transactions isEmpty.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:31' prior: 50656521!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: portfolio transactions isEmpty.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:47' prior: 50656533!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: portfolio transactions equals: #( transaction) .! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:44:58' prior: 50656545!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: portfolio transactions equals: #( transaction) asOrderedCollection .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:45:27' prior: 50656517!
transactions
	^(accounts collect: [:anAccount | anAccount transactions]).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:52:37' prior: 50656571!
transactions
	^(accounts collect: [ :anAccount | anAccount transactions]) flatten.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:53:15' prior: 50656558!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio transactions) equals: (account transactions).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:53:26' prior: 50656583!
test12OneTransactionInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio transactions) equals: (OrderedCollection with: transaction ).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:55:13'!
test13OneTransactionNestedInPortfolio
	| portfolio account transaction |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	transaction := Deposit for: 50.
	account register: transaction.
	portfolio addAccount: account.
	self assert: (portfolio transactions) equals: (OrderedCollection with: transaction ).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:59:27' prior: 50656609!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 transactions ) equals: (OrderedCollection fromArray: #( transaction1 transaction2 transaction3))! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/16/2023 23:59:55' prior: 50656623!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 transactions ) equals: (OrderedCollection newFrom: #( transaction1 transaction2 transaction3))! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:00:31' prior: 50656653!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 transactions ) equals: (OrderedCollection with: #( transaction1 transaction2 transaction3))! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:01:27' prior: 50656683!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 expectedTransactions |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions ) equals: expectedTransactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:03:09' prior: 50656577!
transactions
	^OrderedCollection with: (accounts collect: [ :anAccount | anAccount transactions] flatten)
					    with: (portfolios collect: [ :aPortfolio | aPortfolio transactions] flatten)! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:03:57' prior: 50656747!
transactions
	^(OrderedCollection with: (accounts collect: [ :anAccount | anAccount transactions] flatten)
					    with: (portfolios collect: [ :aPortfolio | aPortfolio transactions] flatten)) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:04:17' prior: 50656757!
transactions
	^(OrderedCollection with: (accounts collect: [ :anAccount | anAccount transactions])
					    with: (portfolios collect: [ :aPortfolio | aPortfolio transactions])) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:07:15'!
transactionsInAccounts
	^accounts collect: [ :anAccount | anAccount transactions]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:07:43'!
transactionsInPortfolios
	^portfolios collect: [ :aPortfolio | aPortfolio transactions].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:08:39' prior: 50656767!
transactions
	^(OrderedCollection with: (self transactionsInPortfolios ) with: (self transactionsInAccounts)) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:09:01' prior: 50656788!
transactions
	^(OrderedCollection with: (self transactionsInAccounts ) with: (self transactionsInPortfolios)) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:09:09' prior: 50656795!
transactions
	^(OrderedCollection with: (self transactionsInAccounts) with: (self transactionsInPortfolios)) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:12:22' prior: 50650746 overrides: 16920235!
initialize
	portfolios := Bag new.
	accounts := Bag new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:12:44' prior: 50656802!
transactions
	^((self transactionsInAccounts) add: (self transactionsInPortfolios)) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:09:01' prior: 50656815!
transactions
	^(OrderedCollection with: (self transactionsInAccounts ) with: (self transactionsInPortfolios)) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:15:58' prior: 50656810 overrides: 16920235!
initialize
	portfolios := OrderedCollection new.
	accounts := OrderedCollection new.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:17:38' prior: 50656713!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 expectedTransactions |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions ) equals: expectedTransactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 00:18:45' prior: 50656835!
test13OneTransactionNestedInPortfolio
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 transaction1 transaction2 transaction3 expectedTransactions |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 := (ReceptiveAccount new) register: (transaction1 ).
	account2 := ((ReceptiveAccount new) register: transaction2) register: transaction3.
	account3 := (ReceptiveAccount new).
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions ) equals: expectedTransactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 21:48:43' prior: 50656782!
transactionsInPortfolios
	^portfolios 
		inject: (OrderedCollection new)
		into: [:transactions :portfolio | portfolio addTransactionsTo: transactions].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 21:52:19'!
addTransactionsTo: aTransactionCollection
	^aTransactionCollection add: (self transactions)! !

(OrderedCollection with: 1) add: 2!

(OrderedCollection with: 1) add: 2!

(OrderedCollection with: 1) add: 2!

(OrderedCollection with: 1)!

oc add: 2!

oc add: 2
!

oc := OrderedCollection with: 1.!

oc := OrderedCollection with: 1.!

oc := OrderedCollection with: 1.!

oc := OrderedCollection with: 1.!

oc := OrderedCollection with: 1.!

oc := OrderedCollection with: 1.!

oc := OrderedCollection with: 1.!

oc := OrderedCollection with: 1.!

oc add: 2!

oc add: 2!

oc add: 2!

oc add: 2!

oc add: 2!

oc.!

oc := OrderedCollection with: 1.!

oc.!

oc add: 2!

oc.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 21:56:00' prior: 50656911!
addTransactionsTo: aTransactionCollection
	aTransactionCollection addAll: (self transactions)! !

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 21:56:56'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 21:56:58'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 21:57:01'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 21:57:01'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 21:57:54'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 21:57:54'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 21:58:16' prior: 50656903!
transactionsInPortfolios
	^portfolios 
		inject: (OrderedCollection new)
		into: [:transactions :portfolio | portfolio addTransactionsTo: transactions. transactions].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 21:58:17'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 21:58:17'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:02:44' prior: 50656776!
transactionsInAccounts
	^accounts
		inject: OrderedCollection new 
		into: [ :transactions :account | account addTransactionsTo: transactions. transactions]! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'FK 10/17/2023 22:03:27'!
addTransactionsTo: aTransactionCollection
	aTransactionCollection addAll: transactions.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:03:48'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:03:48'!
PASSED!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/17/2023 22:04:16' prior: 50656821!
transactions
	^(self transactionsInAccounts) addAll: (self transactionsInPortfolios).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:04:22'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:04:22'!
FAILURE!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:04:22'!
FAILURE!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:04:42'!
FAILURE!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:04:42'!
FAILURE!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:04:52'!
FAILURE!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:04:52'!
FAILURE!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/17/2023 22:05:27' prior: 50657074!
transactions
	^(self transactionsInAccounts) addAll: (self transactionsInPortfolios); yourself.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:05:29'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:05:29'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:06:48' prior: 50656961!
transactionsInPortfolios
	^portfolios 
		inject: (OrderedCollection new)
		into: [:transactions :portfolio | portfolio addTransactionsTo: transactions; yourself].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:06:50'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:06:50'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:06:50'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:07:04' prior: 50657190!
transactionsInPortfolios
	^portfolios 
		inject: (OrderedCollection new)
		into: [:transactions :portfolio | portfolio addTransactionsTo: transactions. transactions].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:07:06'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:07:06'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:08:09' prior: 50657247!
transactionsInPortfolios
	^portfolios 
		inject: OrderedCollection new
		into: [ :transactions :portfolio | portfolio addTransactionsTo: transactions. transactions].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:08:54' prior: 50651098!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: (Portfolio))
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:09:00'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:09:00'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:09:16' prior: 50651080!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	accounts add: anAccount.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:09:22'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:09:22'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:09:32' prior: 50657310!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: Portfolio)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:10:00' prior: 50657418!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:10:05'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:10:05'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:10:37' prior: 50654917!
isInPortfolios: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [:foundPortfolio |^true] 
		ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:10:48' prior: 50657481!
isInPortfolios: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [:foundPortfolio | ^true] 
		ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:11:06' prior: 50654894!
isInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:11:13' prior: 50657490!
isInPortfolios: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [ :foundPortfolio | ^true] 
		ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:15:35' prior: 50650918!
balance
	^(accounts inject: 0 into: [:balance :account | account addToBalance: balance]) + 
          (portfolios inject: 0 into: [:balance :portfolio | portfolio addToBalance: balance]).! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:15:39'!
ERROR!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:15:39'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:15:39'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:15:39'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:15:39'!
PASSED!
!ReceptiveAccount methodsFor: 'nil' stamp: 'FK 10/17/2023 22:16:07'!
addToBalance: aBalance
	^self balance + aBalance.! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/17/2023 22:16:33'!
addToBalance: aBalance
	^self balance + aBalance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FK 10/17/2023 22:16:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FK 10/17/2023 22:16:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FK 10/17/2023 22:16:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FK 10/17/2023 22:16:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FK 10/17/2023 22:16:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FK 10/17/2023 22:16:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FK 10/17/2023 22:16:34'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:16:37'!
PASSED!

oc := OrderedCollection with: 1.!

oc add: 2!

oc.!

oc := OrderedCollection with: 1. !

oc.!

oc add: 2!

oc.!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:34:46'!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self 
		should: [ portfolio1 addAccount: account1 ] 
		raise: Error 
		description: [ Portfolio errorMessageAccountIsAlreadyRegistered ]! !
!Portfolio class methodsFor: 'nil' stamp: 'FK 10/17/2023 22:35:16'!
errorMessageAccountIsAlreadyRegistered
	^'This account is already registered on this portfolio'! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:35:29'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:35:29'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:35:39'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:35:39'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:36:04' prior: 50657654!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self 
		should: [ portfolio1 addAccount: account1 ] 
		raise: Error 
		description: [ Portfolio errorMessageAccountIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:36:05'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:36:05'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:36:12'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:36:12'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:36:21' prior: 50657688!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [ portfolio1 addAccount: account1 ] 
		raise: Error 
		description: [ Portfolio errorMessageAccountIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:36:22'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:36:22'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:37:14' prior: 50657717!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	(self   should: [ portfolio1 addAccount: account1 ] 
		raise: Error 
		description: [ Portfolio errorMessageAccountIsAlreadyRegistered ]).! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:37:15'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:37:15'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:37:26'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:37:26'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:39:13' prior: 50657738!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	(self   should: [ portfolio1 addAccount: account1 ] 
		raise: Error 
		description: Portfolio errorMessageAccountIsAlreadyRegistered).! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:39:14'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:43:34' prior: 50657767!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 22:43:45'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:43:45'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:43:45'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:43:45'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:44:24' prior: 50657785!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self should: [portfolio1 addAccount: account1]
		raise: Error 
		description: Portfolio errorMessageAccountIsAlreadyRegistered.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:44:53' prior: 50657855!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: Portfolio errorMessageAccountIsAlreadyRegistered.! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:57:08'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 22:59:39' prior: 50657364!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self class errorMessageAccountIsAlreadyRegistered].
	accounts add: anAccount.! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:59:43'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:59:43'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 22:59:58'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:00:30' prior: 50657869!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:00:31'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:00:31'!
ERROR!

Portfolio errorMessageAccountIsAlreadyRegistered!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:01:32' prior: 50657910!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:01:36'!
FAILURE!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:01:36'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:02:50' prior: 50657933!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error.! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:02:51'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:03:12' prior: 50657887!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	accounts add: anAccount.! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:03:19'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:01:32' prior: 50657954!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:03:40' prior: 50657985!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:03:40'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:03:40'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:05:53'!
test14AddingAccountThatIsAlreadyOnANestedPortfolioFails
	| portfolio1 account1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:05:59' prior: 50658065!
test14AddingAccountThatIsAlreadyOnANestedPortfolioFails
	| portfolio1 account1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test14AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:05'!
FAILURE!

!testRun: #PortfolioTests #test14AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:05'!
ERROR!

!testRun: #PortfolioTests #test14AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:09'!
FAILURE!

!testRun: #PortfolioTests #test14AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:09'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:06:39'!
test15AddingAccountThatIsAlreadyOnANestedPortfolioFails
	| portfolio1 account1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!methodRemoval: PortfolioTests #test14AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:39'!
test14AddingAccountThatIsAlreadyOnANestedPortfolioFails
	| portfolio1 account1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:06:45'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:45'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:45'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:45'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:06:50'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:52'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:52'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:06:52'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:10:20' prior: 50657969!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: anAccount] 
		ifFound: [	accounts add: anAccount]
		ifNone: [^self error: self class errorMessageAccountIsAlreadyRegistered].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:10:53' prior: 50658227!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:11:06' prior: 50658244!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/17/2023 23:13:32'!
hasAccount: anAccount
	^(accounts includes: anAccount)
		 or: ([
			portfolios 
				detect: [:portfolio | portfolio hasAccount: anAccount]
				ifFound: [^true] 
				ifNone: [^false]
			]
		)! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:13:44' prior: 50658277!
hasAccount: anAccount
	^(accounts includes: anAccount)
		 or: ([
			portfolios 
				detect: [:portfolio | portfolio hasAccount: anAccount]
				ifFound: [^true] 
				ifNone: [^false]
			])! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:13:48' prior: 50658286!
hasAccount: anAccount
	^(accounts includes: anAccount)
		 or: [
			portfolios 
				detect: [:portfolio | portfolio hasAccount: anAccount]
				ifFound: [^true] 
				ifNone: [^false]
			]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:13:49'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:13:49'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:19:06'!
test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails
	| portfolio1 account1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio2 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:19:42'!
FAILURE!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:19:42'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'FK 10/17/2023 23:21:15'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:21:13' prior: 50656829 overrides: 16920235!
initialize
	parent := nil.
	portfolios := OrderedCollection new.
	accounts := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:23:40' prior: 50657427!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	aPortfolio xxx: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/17/2023 23:24:27'!
xxx: anotherPortfolio
	parent := anotherPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:26:26'!
addToAPortfolio: anotherPortfolio
	parent := anotherPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:26:26' prior: 50658398!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!methodRemoval: Portfolio #xxx: stamp: 'FK 10/17/2023 23:26:26'!
xxx: anotherPortfolio
	parent := anotherPortfolio.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:34:53' prior: 50658261!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	((parent = nil) 
		and: [parent hasRegistered: anAccount]) 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered].
	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:37:02' prior: 50658431!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	((parent isNotNil) 
		and: [parent hasRegistered: anAccount]) 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered].
	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !

1 isNotNil!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:34:53' prior: 50658453!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	((parent = nil) 
		and: [parent hasRegistered: anAccount]) 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered].
	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:40:00' prior: 50658475!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		[parent hasRegistered: anAccount] 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].

	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:40:21' prior: 50658497!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		[parent hasRegistered: anAccount] 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].

	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:40:26'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:40:29'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:40:29'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:41:52' prior: 50658519!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		[parent hasRegistered: anAccount] 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].
	accounts add: anAccount.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:41:53'!
FAILURE!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:41:53'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:41:53'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:41:53'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:42:03'!
FAILURE!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:42:03'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:42:03'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:42:03'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:42:08'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:42:10'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:42:14'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:42:16'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:42:18'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:42:19'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:42:21'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:42:22'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:42:23'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:42:24'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:42:26'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:42:28'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:42:30'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:42:31'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:42:31'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:42:31'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:41:52' prior: 50658602!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		[parent hasRegistered: anAccount] 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].
	accounts add: anAccount.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:30'!
FAILURE!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:49:30'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:30'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:30'!
ERROR!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:33'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:33'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:33'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:49:38'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:42'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:42'!
FAILURE!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:49:42'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:41:52' prior: 50658805!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		[parent hasRegistered: anAccount] 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].
	accounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:40:21' prior: 50658917!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		[parent hasRegistered: anAccount] 
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].

	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:50:42'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:50:42'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:56:44'!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails
	| portfolio1 account1 portfolio2 portfolio3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio2 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:58:37'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/17/2023 23:58:37'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/17/2023 23:58:44' prior: 50659012!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails
	| portfolio1 account1 portfolio2 portfolio3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio3 addAccount: account1]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/17/2023 23:58:45'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 00:01:08'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:01:08'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:05:53' prior: 50658934!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		(parent hasRegistered: anAccount)
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].

	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:06:06'!
FAILURE!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:06:06'!
FAILURE!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:06:06'!
ERROR!

[true] ifTrue: [1]!

true ifTrue: [1]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:09:21' prior: 50659247!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		(parent hasRegistered: anAccount)
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].

	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/18/2023 00:17:05'!
xxx: anAccount
	^(accounts includes: anAccount) or:
	 [(parent = nil)
			 ifTrue: [^false] 
			 ifFalse: [^parent xxx: anAccount]]! !

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:17:10'!
FAILURE!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:17:10'!
FAILURE!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:17:10'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:17:48' prior: 50659283!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		(parent xxx: anAccount)
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].

	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 00:17:50'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:17:50'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:19:04'!
isInAnyUpperPortfolio: anAccount
	^(accounts includes: anAccount) or:
	 [(parent = nil)
			 ifTrue: [^false] 
			 ifFalse: [^parent xxx: anAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:19:04' prior: 50659324!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
	(parent = nil) ifFalse: [
		(parent isInAnyUpperPortfolio: anAccount)
		ifTrue: [ ^self error: self class errorMessageAccountIsAlreadyRegistered]
	].

	portfolios 
		detect: [ :portfolio | portfolio hasAccount: anAccount] 
		ifFound: [^self error: self class errorMessageAccountIsAlreadyRegistered]
		ifNone: [	accounts add: anAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:19:04' prior: 50659304!
xxx: anAccount
	^(accounts includes: anAccount) or:
	 [(parent = nil)
			 ifTrue: [^false] 
			 ifFalse: [^parent isInAnyUpperPortfolio: anAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:19:04' prior: 50659406!
isInAnyUpperPortfolio: anAccount
	^(accounts includes: anAccount) or:
	 [(parent = nil)
			 ifTrue: [^false] 
			 ifFalse: [^parent isInAnyUpperPortfolio: anAccount]]! !

!methodRemoval: Portfolio #xxx: stamp: 'FK 10/18/2023 00:19:04'!
xxx: anAccount
	^(accounts includes: anAccount) or:
	 [(parent = nil)
			 ifTrue: [^false] 
			 ifFalse: [^parent isInAnyUpperPortfolio: anAccount]]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 00:19:06'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:19:06'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:48:50'!
xxx: anAccount
	
	 [(parent = nil)]
		 ifTrue: [self hasAccount: anAccount]
		 ifFalse: [parent xxx: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:48:55' prior: 50659520!
xxx: anAccount
	 [(parent = nil)]
		 ifTrue: [self hasAccount: anAccount]
		 ifFalse: [parent xxx: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:49:01' prior: 50659527!
xxx: anAccount
	 [parent = nil]
		 ifTrue: [self hasAccount: anAccount]
		 ifFalse: [parent xxx: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:50:46' prior: 50659414!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(accounts includes: anAccount)
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].
		
	(self xxx: anAccount) ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:51:00' prior: 50659541!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self xxx: anAccount) ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 00:51:03'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 00:51:03'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 00:51:03'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 00:51:03'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 00:51:03'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:51:03'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 00:51:16'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 00:51:16'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 00:51:16'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 00:51:16'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 00:51:16'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:51:16'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:51:47' prior: 50659534!
xxx: anAccount
	 (parent = nil)
		 ifTrue: [^self hasAccount: anAccount]
		 ifFalse: [^parent xxx: anAccount]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 00:51:48'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:51:48'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:59:40'!
accountIsInAnyPortfolio: anAccount
	 (parent = nil)
		 ifTrue: [^self hasAccount: anAccount]
		 ifFalse: [^parent xxx: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:59:40' prior: 50659687!
xxx: anAccount
	 (parent = nil)
		 ifTrue: [^self hasAccount: anAccount]
		 ifFalse: [^parent accountIsInAnyPortfolio: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:59:40' prior: 50659557!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self accountIsInAnyPortfolio: anAccount) ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 00:59:40' prior: 50659754!
accountIsInAnyPortfolio: anAccount
	 (parent = nil)
		 ifTrue: [^self hasAccount: anAccount]
		 ifFalse: [^parent accountIsInAnyPortfolio: anAccount]! !

!methodRemoval: Portfolio #xxx: stamp: 'FK 10/18/2023 00:59:40'!
xxx: anAccount
	 (parent = nil)
		 ifTrue: [^self hasAccount: anAccount]
		 ifFalse: [^parent accountIsInAnyPortfolio: anAccount]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 00:59:50'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:00:10' prior: 50659770!
safelyAddAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self accountIsInAnyPortfolio: anAccount) 
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:00:12'!
PASSED!

!methodRemoval: Portfolio #isInAnyUpperPortfolio: stamp: 'FK 10/18/2023 01:00:31'!
isInAnyUpperPortfolio: anAccount
	^(accounts includes: anAccount) or:
	 [(parent = nil)
			 ifTrue: [^false] 
			 ifFalse: [^parent isInAnyUpperPortfolio: anAccount]]!

----SNAPSHOT----(18 October 2023 01:01:35) CuisUniversity-5981.image priorSource: 10352105!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:03:02'!
test18AddingAnAlreadyKnownPortfolioFails
	| portfolio1 portfolio2  |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:03:07'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:03:07'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:03:28' prior: 50659942!
test18AddingAnAlreadyKnownPortfolioFails
	| portfolio1 portfolio2  |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:04:28'!
errorMessagePortfolioIsAlreadyRegistered
	^'This portfolio is already registered'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:07:36' prior: 50658417!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:07:40'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:07:40'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:11:02'!
test19AddingAnAlreadyKnownNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio1 addPortfolio: portfolio3]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:11:03'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:11:03'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:11:16'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:11:16'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:16:52' prior: 50659981!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	(portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifNone: []).
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/18/2023 01:17:15'!
xxx: aPortfolio
	portfolios includes: aPortfolio! !

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:17:35'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:17:49' prior: 50660089!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	(portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifNone: []).
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:19:22'!
test19AddingAnAlreadyKnownDoublyNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  portfolio4|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio4.
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:19:23'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:19:56'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:19:56'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:20:11'!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  portfolio4|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio4.
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!methodRemoval: PortfolioTests #test19AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:20:11'!
test19AddingAnAlreadyKnownDoublyNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  portfolio4|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio4.
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:20:24'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:20:24'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:21:01' prior: 50660296!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  portfolio4|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio4.
	self   should: [portfolio2 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:21:02'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:21:08' prior: 50660405!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  portfolio4|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio4.
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:21:14'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:22:54' prior: 50660107!
xxx: aPortfolio
	^portfolios includes: aPortfolio! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:22:58'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:22:58'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:22:58'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:22:58'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:23:06'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:23:08'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:23:08'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:23:08'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:23:19'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:23:21'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:23:21'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:23:21'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:24:29' prior: 50660593!
xxx: aPortfolio
	^portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^false]
		ifNone: [^true].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:24:31'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:24:31'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:25:55' prior: 50660116!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	(self xxx: aPortfolio)
		 ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered ] .
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:25:56'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:25:56'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:25:56'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:26:24' prior: 50660707!
xxx: aPortfolio
	^portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^true]
		ifNone: [^false].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:26:26'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:26:26'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:26:26'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:26:49' prior: 50660874!
xxx: aPortfolio
	portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^true]
		ifNone: [^false].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:26:51'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:26:51'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:26:51'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:27:09' prior: 50660786!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	(self xxx: aPortfolio)
		 ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered ].

	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:27:29' prior: 50660953!
xxx: aPortfolio
	portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^true]
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:27:55' prior: 50661049!
xxx: aPortfolio
	portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^true]
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:17:49' prior: 50661032!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	(portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifNone: []).
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:24:29' prior: 50661056!
xxx: aPortfolio
	^portfolios 
		detect: [ :portfolio | portfolio xxx: aPortfolio] 
		ifFound: [^false]
		ifNone: [^true].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:29:33'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:29:33'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:30:26' prior: 50661082!
xxx: aPortfolio
	^portfolios 
		detect: [ :portfolio | portfolio = aPortfolio]
		ifFound: [^false]
		ifNone: [^true].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:30:27'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:30:27'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:30:44' prior: 50661063!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	(portfolios 
		detect: [ :portfolio | portfolio = aPortfolio ] 
		ifFound: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifNone: []).
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:30:45'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:30:45'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:30:45'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:31:32' prior: 50661240!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	(portfolios do: [ :portfolio | portfolio xxx: aPortfolio ] )
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:31:33'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:31:33'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:31:33'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:31:45' prior: 50661161!
xxx: aPortfolio
	^portfolios 
		detect: [ :portfolio | portfolio = aPortfolio]
		ifFound: [^true]
		ifNone: [^false].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:31:50'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:31:50'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:31:50'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:35:49' prior: 50661417!
xxx: aPortfolio
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].
	portfolios do: [ :portfolio | portfolio xxx: aPortfolio].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:37:13'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:37:13'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:37:13'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:37:34' prior: 50661330!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self xxx: aPortfolio).
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:37:35'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:37:35'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:38:34' prior: 50661496!
xxx: aPortfolio
	(portfolios includes: aPortfolio)
		 ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifFalse: [portfolios do: [ :portfolio | portfolio xxx: aPortfolio]]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:38:35'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:38:35'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:38:43' prior: 50661660!
xxx: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifFalse: [portfolios do: [ :portfolio | portfolio xxx: aPortfolio]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:41:07'!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifFalse: [portfolios do: [ :portfolio | portfolio xxx: aPortfolio]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:41:07' prior: 50661741!
xxx: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:41:07' prior: 50661577!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self isInAnyKnownLowerPortfolio: aPortfolio).
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 01:41:07' prior: 50661750!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]]! !

!methodRemoval: Portfolio #xxx: stamp: 'FK 10/18/2023 01:41:07'!
xxx: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 01:41:11'!
PASSED!

----SNAPSHOT----(18 October 2023 01:41:18) CuisUniversity-5981.image priorSource: 10505219!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:10:01'!
test21AddingAnAlreadyKnownParentPortfolioFails
	| portfolio1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio2 addPortfolio: portfolio1]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:10:02'!
FAILURE!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:10:02'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:12:15' prior: 50661770!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self isInAnyKnownLowerPortfolio: aPortfolio).
	
	(aPortfolio  = parent) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:12:26'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:12:33'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:13:50'!
test22AddingAnAlreadyKnownUpperParentPortfolioFails
	| portfolio1 portfolio2 portfolio3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	
	self   should: [portfolio3 addPortfolio: portfolio1]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:13:52'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:13:52'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:15:44' prior: 50661897!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self isInAnyKnownLowerPortfolio: aPortfolio).
	
	(aPortfolio = parent) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:16:48' prior: 50662015!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self isInAnyKnownLowerPortfolio: aPortfolio).
	
	(aPortfolio = parent) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	(parent xxx: aPortfolio) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/18/2023 20:19:43'!
xxx: aPortfolio
	(parent = nil) 
		ifTrue: [self isInAnyKnownLowerPortfolio: aPortfolio]
		ifFalse: [ parent xxx: aPortfolio]! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:19:51'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:19:51'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:20:36' prior: 50662030!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self isInAnyKnownLowerPortfolio: aPortfolio).
	
	(self xxx: aPortfolio) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:21:03'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:21:03'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:21:19' prior: 50662062!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
	
	(self xxx: aPortfolio) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:21:20' prior: 50662084!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].	
	(self xxx: aPortfolio) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:21:23' prior: 50662097!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
			
	(self xxx: aPortfolio) ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ].
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:21:26'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:21:26'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:22:42' prior: 50661782!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:22:44'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:22:44'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:22:49'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:22:49'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:23:51' prior: 50662131!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]]
	^false! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:23:55'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:23:55'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:24:39' prior: 50662227!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]].
	^false! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:25:03'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:25:03'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:25:11'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:25:11'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:25:15'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:25:15'!
ERROR!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:25:55'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:26:43' prior: 50662047!
xxx: aPortfolio
	(parent = nil) 
		ifTrue: [^self isInAnyKnownLowerPortfolio: aPortfolio]
		ifFalse: [^parent xxx: aPortfolio]! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:26:47'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:26:47'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:26:47'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:26:53'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:26:53'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:26:53'!
FAILURE!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:26:53'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:26:53'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:27:02'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:27:02'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:27:02'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:27:24'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:27:24'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:27:24'!
FAILURE!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:27:24'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:27:24'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:28:51' prior: 50662110!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
			
	(self xxx: aPortfolio) 
		ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ]
		ifFalse: [	aPortfolio addToAPortfolio: self.
			      portfolios add: aPortfolio.].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:29:02'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:29:02'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:29:02'!
FAILURE!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:29:02'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:29:02'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:33:03'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:33:05'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:33:05'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:33:05'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:37:36' prior: 50662244!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | 
				(portfolio isInAnyKnownLowerPortfolio: aPortfolio) ifTrue: [^false].
				]
			].
	^false! !

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:37:45'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:37:46'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:37:46'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:37:58' prior: 50662648!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | 
				(portfolio isInAnyKnownLowerPortfolio: aPortfolio) ifTrue: [^false].
				]
			].! !

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:38:02'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:38:02'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:37:36' prior: 50662670!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | 
				(portfolio isInAnyKnownLowerPortfolio: aPortfolio) ifTrue: [^false].
				]
			].
	^false! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:39:22' prior: 50662688!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | 
				(portfolio isInAnyKnownLowerPortfolio: aPortfolio) ifTrue: [^false].
				]
			].
	^false! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:40:05' prior: 50662699!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios isEmpty) ifTrue: [ ^false] ifFalse: [
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | 
				(portfolio isInAnyKnownLowerPortfolio: aPortfolio) ifTrue: [^false].
				]
			].
	].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:40:13'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:40:13'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:40:13'!
ERROR!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:40:13'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:40:13'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:40:26' prior: 50662710!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios isEmpty) ifTrue: [ ^false] ifFalse: [
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | 
				(portfolio isInAnyKnownLowerPortfolio: aPortfolio).
				]
			].
	].! !

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:40:30'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:40:34'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:40:34'!
ERROR!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:40:34'!
ERROR!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:40:34'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:40:34'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:41:40'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:41:44'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:42:01'!
ERROR!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:44:29'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:51:37' prior: 50662801!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [^portfolios inject: false into: [ :accum :portfolio | accum or:
				(portfolio isInAnyKnownLowerPortfolio: aPortfolio).
				]
			].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:51:40'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:51:40'!
FAILURE!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:51:40'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:53:38' prior: 50662351!
xxx: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent xxx: aPortfolio]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:53:43'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:55:23' prior: 50662909!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]].
	^false.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:55:36'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:55:36'!
FAILURE!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:55:36'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:55:36'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:55:23' prior: 50663086!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]].
	^false.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:55:23' prior: 50663175!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]].
	^false.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:55:23' prior: 50663185!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [portfolios do: [ :portfolio | portfolio isInAnyKnownLowerPortfolio: aPortfolio]].
	^false.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:57:48' prior: 50663195!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [
			^portfolios 
				inject: false
				into: [:accum :portfolio | accum or: [portfolio isInAnyKnownLowerPortfolio: aPortfolio]]].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 20:57:49'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:58:44'!
isPortfolioInAnyPortfolio: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent xxx: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:58:44' prior: 50662999!
xxx: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioInAnyPortfolio: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:58:44' prior: 50662540!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
			
	(self isPortfolioInAnyPortfolio: aPortfolio) 
		ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ]
		ifFalse: [	aPortfolio addToAPortfolio: self.
			      portfolios add: aPortfolio.].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:58:44' prior: 50663294!
isPortfolioInAnyPortfolio: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioInAnyPortfolio: aPortfolio]! !

!methodRemoval: Portfolio #xxx: stamp: 'FK 10/18/2023 20:58:44'!
xxx: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioInAnyPortfolio: aPortfolio]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:59:56'!
isPortfolioAlreadyRegistered: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioInAnyPortfolio: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:59:56' prior: 50663312!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
			
	(self isPortfolioAlreadyRegistered: aPortfolio) 
		ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ]
		ifFalse: [	aPortfolio addToAPortfolio: self.
			      portfolios add: aPortfolio.].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:59:56' prior: 50663327!
isPortfolioInAnyPortfolio: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 20:59:56' prior: 50663344!
isPortfolioAlreadyRegistered: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !

!methodRemoval: Portfolio #isPortfolioInAnyPortfolio: stamp: 'FK 10/18/2023 20:59:56'!
isPortfolioInAnyPortfolio: aPortfolio
	(parent = nil) 
		ifTrue: [^(self = aPortfolio) or: [self isInAnyKnownLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:00:02'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:03:45' prior: 50651298!
addPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
			
	(self isPortfolioAlreadyRegistered: aPortfolio) 
		ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ]
		ifFalse: [	aPortfolio addToAPortfolio: self.
			      portfolios add: aPortfolio.].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:03:48'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:04:55' prior: 50663477!
addPortfolio: aPortfolio
	self mmm: aPortfolio.
			
	(self isPortfolioAlreadyRegistered: aPortfolio) 
		ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ]
		ifFalse: [	aPortfolio addToAPortfolio: self.
			      portfolios add: aPortfolio.].! !
!Portfolio methodsFor: 'nil' stamp: 'FK 10/18/2023 21:05:52'!
mmm: maybeAPortfolio
	(maybeAPortfolio isKindOf: self class)
		 	ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:05:54'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:07:12'!
checkIsPortfolio: maybeAPortfolio
	(maybeAPortfolio isKindOf: self class)
		 	ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:07:12' prior: 50663571!
addPortfolio: aPortfolio
	self checkIsPortfolio: aPortfolio.
			
	(self isPortfolioAlreadyRegistered: aPortfolio) 
		ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ]
		ifFalse: [	aPortfolio addToAPortfolio: self.
			      portfolios add: aPortfolio.].! !

!methodRemoval: Portfolio #mmm: stamp: 'FK 10/18/2023 21:07:12'!
mmm: maybeAPortfolio
	(maybeAPortfolio isKindOf: self class)
		 	ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:09:27' prior: 50663677!
addPortfolio: aPortfolio
	self checkIsPortfolio: aPortfolio.	
	self checkPortfolioIsNotAlreadyRegistered: aPortfolio.
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:10:45'!
checkPortfolioIsNotAlreadyRegistered: aPortfolio.
	(self isPortfolioAlreadyRegistered: aPortfolio)
		ifTrue: [^self error: self class errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:10:47'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:11:45' prior: 50663669!
checkIsPortfolio: maybeAPortfolio
	(maybeAPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:18:13'!
yyy: aPortfolio
	(self = aPortfolio)
		ifTrue: [^true]
		ifFalse: [
			^portfolios 
				inject: false
				into: [:accum :portfolio | accum or: [portfolio isInAnyKnownLowerPortfolio: aPortfolio]]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:18:36' prior: 50663379!
isPortfolioAlreadyRegistered: aPortfolio
	(parent = nil) 
		ifTrue: [^self  yyy: aPortfolio ]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:18:37'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:18:51'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:19:04'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:19:07'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:19:11'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:19:13'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:19:14'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:19:15'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:19:15'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:19:15'!
ERROR!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:19:48'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:19:48'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:19:48'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:24:09' prior: 50663705!
checkPortfolioIsNotAlreadyRegistered: aPortfolio.
	(self isPortfolioAlreadyRegistered: aPortfolio)
		ifTrue: [^self error: (self class errorMessagePortfolioIsAlreadyRegistered)].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
FAILURE!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:24:10'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:25:32' prior: 50664030!
checkPortfolioIsNotAlreadyRegistered: aPortfolio
	| r |
	r := self isPortfolioAlreadyRegistered: aPortfolio.
	(self isPortfolioAlreadyRegistered: aPortfolio)
		ifTrue: [^self error: (self class errorMessagePortfolioIsAlreadyRegistered)].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:26:30' prior: 50663801!
yyy: aPortfolio
	(self = aPortfolio)
		ifTrue: [^true]
		ifFalse: [
			^portfolios 
				inject: false
				into: [:accum :portfolio | accum or: [portfolio yyy: aPortfolio]]].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:26:31'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:27:40' prior: 50664136!
yyy: aPortfolio
	^(self = aPortfolio) 
	or: [
		portfolios 
			inject: false
			into: [:accum :portfolio | accum or: [portfolio yyy: aPortfolio]]].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:27:41'!
PASSED!

!methodRemoval: Portfolio #isInAnyKnownLowerPortfolio: stamp: 'FK 10/18/2023 21:28:26'!
isInAnyKnownLowerPortfolio: aPortfolio
	(portfolios includes: aPortfolio)
		ifTrue: [^true]
		ifFalse: [
			^portfolios 
				inject: false
				into: [:accum :portfolio | accum or: [portfolio isInAnyKnownLowerPortfolio: aPortfolio]]].!

!methodRemoval: Portfolio #safelyAddPortfolio: stamp: 'FK 10/18/2023 21:28:37'!
safelyAddPortfolio: aPortfolio
	(aPortfolio isKindOf: self class)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
			
	(self isPortfolioAlreadyRegistered: aPortfolio) 
		ifTrue: [ ^self error: self class errorMessagePortfolioIsAlreadyRegistered ]
		ifFalse: [	aPortfolio addToAPortfolio: self.
			      portfolios add: aPortfolio.].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:28:49' prior: 50664125!
checkPortfolioIsNotAlreadyRegistered: aPortfolio
	(self isPortfolioAlreadyRegistered: aPortfolio)
		ifTrue: [^self error: (self class errorMessagePortfolioIsAlreadyRegistered)].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:28:49'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:29:52'!
isInAnyLowerPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [
		portfolios 
			inject: false
			into: [:accum :portfolio | accum or: [portfolio yyy: aPortfolio]]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:29:52' prior: 50663811!
isPortfolioAlreadyRegistered: aPortfolio
	(parent = nil) 
		ifTrue: [^self  isInAnyLowerPortfolio: aPortfolio ]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:29:52' prior: 50664224!
yyy: aPortfolio
	^(self = aPortfolio) 
	or: [
		portfolios 
			inject: false
			into: [:accum :portfolio | accum or: [portfolio isInAnyLowerPortfolio: aPortfolio]]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:29:52' prior: 50664423!
isInAnyLowerPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [
		portfolios 
			inject: false
			into: [:accum :portfolio | accum or: [portfolio isInAnyLowerPortfolio: aPortfolio]]].! !

!methodRemoval: Portfolio #yyy: stamp: 'FK 10/18/2023 21:29:52'!
yyy: aPortfolio
	^(self = aPortfolio) 
	or: [
		portfolios 
			inject: false
			into: [:accum :portfolio | accum or: [portfolio isInAnyLowerPortfolio: aPortfolio]]].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:32:27' prior: 50664450!
isInAnyLowerPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyLowerPortfolio: aPortfolio]].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:32:29'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:54:40' prior: 50664432!
isPortfolioAlreadyRegistered: aPortfolio
	(parent = nil) 
		ifTrue: [^(aPortfolio = self) or: [self  isInAnyLowerPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:55:08' prior: 50664467!
isInAnyLowerPortfolio: aPortfolio
	^(portfolios includes: aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyLowerPortfolio: aPortfolio]].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 21:55:14'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 21:32:27' prior: 50664564!
isInAnyLowerPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyLowerPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:01:46'!
searchFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyLowerPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:01:46' prior: 50664652!
isInAnyLowerPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [portfolios anySatisfy: [:portfolio | portfolio searchFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:01:46' prior: 50664554!
isPortfolioAlreadyRegistered: aPortfolio
	(parent = nil) 
		ifTrue: [^(aPortfolio = self) or: [self  searchFromCurrentPortfolio: aPortfolio]]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:01:46' prior: 50664660!
searchFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [portfolios anySatisfy: [:portfolio | portfolio searchFromCurrentPortfolio: aPortfolio]].! !

!methodRemoval: Portfolio #isInAnyLowerPortfolio: stamp: 'FK 10/18/2023 22:01:46'!
isInAnyLowerPortfolio: aPortfolio
	^(self = aPortfolio) 
	or: [portfolios anySatisfy: [:portfolio | portfolio searchFromCurrentPortfolio: aPortfolio]].!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:01:48'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:01:53' prior: 50664686!
searchFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio searchFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:02:07' prior: 50664676!
isPortfolioAlreadyRegistered: aPortfolio
	(parent = nil) 
		ifTrue: [^self  searchFromCurrentPortfolio: aPortfolio]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:02:08'!
PASSED!
!Portfolio methodsFor: 'nil' stamp: 'FK 10/18/2023 22:03:23'!
isTopMostPortfolio
	^(parent = nil).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:03:36' prior: 50664789!
isPortfolioAlreadyRegistered: aPortfolio
	(self isTopMostPortfolio) 
		ifTrue: [^self  searchFromCurrentPortfolio: aPortfolio]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:03:39'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:04:42' prior: 50659858!
safelyAddAccount: anAccount
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:04:53' prior: 50651076!
addAccount: anAccount
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self accountIsInAnyPortfolio: anAccount) 
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.
! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:04:54'!
PASSED!

!methodRemoval: Portfolio #safelyAddAccount: stamp: 'FK 10/18/2023 22:05:01'!
safelyAddAccount: anAccount
!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:06:08' prior: 50664974!
addAccount: anAccount
	self checkIsAccount: anAccount.
	(anAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].
		
	(self accountIsInAnyPortfolio: anAccount) 
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:07:00'!
checkIsAccount: maybeAnAccount
	(maybeAnAccount isKindOf: ReceptiveAccount)
		 ifFalse: [^self error: self class notAnAccountOrPortfolioErrorDescription].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:07:01'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:07:08' prior: 50665069!
addAccount: anAccount
	self checkIsAccount: anAccount.

		
	(self accountIsInAnyPortfolio: anAccount) 
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:07:10' prior: 50665170!
addAccount: anAccount
	self checkIsAccount: anAccount.
		
	(self accountIsInAnyPortfolio: anAccount) 
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].

	accounts add: anAccount.
! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:07:11'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:07:50'!
checkAccountIsNotAlreadyRegistered: anAccount
	(self accountIsInAnyPortfolio: anAccount) 
		ifTrue: [^self error: self class errorMessageAccountIsAlreadyRegistered].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:08:06' prior: 50665180!
addAccount: anAccount
	self checkIsAccount: anAccount.	
	self checkAccountIsNotAlreadyRegistered: anAccount.
	
	accounts add: anAccount.
! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:08:10'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:08:41' prior: 50659783!
accountIsInAnyPortfolio: anAccount
	 (self isTopMostPortfolio )
		 ifTrue: [^self hasAccount: anAccount]
		 ifFalse: [^parent accountIsInAnyPortfolio: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:08:42' prior: 50665365!
accountIsInAnyPortfolio: anAccount
	 (self isTopMostPortfolio)
		 ifTrue: [^self hasAccount: anAccount]
		 ifFalse: [^parent accountIsInAnyPortfolio: anAccount]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:08:43'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:10:06'!
searchAccountFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [
			portfolios 
				detect: [:portfolio | portfolio hasAccount: anAccount]
				ifFound: [^true] 
				ifNone: [^false]
			]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:10:06' prior: 50658295!
hasAccount: anAccount
	^(accounts includes: anAccount)
		 or: [
			portfolios 
				detect: [:portfolio | portfolio searchAccountFromCurrentPortfolio: anAccount]
				ifFound: [^true] 
				ifNone: [^false]
			]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:10:06' prior: 50665374!
accountIsInAnyPortfolio: anAccount
	 (self isTopMostPortfolio)
		 ifTrue: [^self searchAccountFromCurrentPortfolio: anAccount]
		 ifFalse: [^parent accountIsInAnyPortfolio: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:10:06' prior: 50665461!
searchAccountFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [
			portfolios 
				detect: [:portfolio | portfolio searchAccountFromCurrentPortfolio: anAccount]
				ifFound: [^true] 
				ifNone: [^false]
			]! !

!methodRemoval: Portfolio #hasAccount: stamp: 'FK 10/18/2023 22:10:06'!
hasAccount: anAccount
	^(accounts includes: anAccount)
		 or: [
			portfolios 
				detect: [:portfolio | portfolio searchAccountFromCurrentPortfolio: anAccount]
				ifFound: [^true] 
				ifNone: [^false]
			]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:10:14'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:11:32'!
searchPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio searchFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:11:32' prior: 50664881!
isPortfolioAlreadyRegistered: aPortfolio
	(self isTopMostPortfolio) 
		ifTrue: [^self  searchPortfolioFromCurrentPortfolio: aPortfolio]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:11:32' prior: 50664781!
searchFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio searchPortfolioFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:11:32' prior: 50665588!
searchPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio searchPortfolioFromCurrentPortfolio: aPortfolio]].! !

!methodRemoval: Portfolio #searchFromCurrentPortfolio: stamp: 'FK 10/18/2023 22:11:32'!
searchFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio searchPortfolioFromCurrentPortfolio: aPortfolio]].!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:11:35'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:12:25' prior: 50665490!
searchAccountFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [
			^portfolios 
				anySatisfy: [:portfolio | portfolio searchAccountFromCurrentPortfolio: anAccount]
			]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:12:26'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:12:37' prior: 50665712!
searchAccountFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [portfolios anySatisfy: [:portfolio | portfolio searchAccountFromCurrentPortfolio: anAccount]]! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:12:38'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:14:57'!
isInAnyPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio searchPortfolioFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:14:57' prior: 50665616!
searchPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyPortfolioFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:14:57' prior: 50665597!
isPortfolioAlreadyRegistered: aPortfolio
	(self isTopMostPortfolio) 
		ifTrue: [^self  isInAnyPortfolioFromCurrentPortfolio: aPortfolio]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:14:57' prior: 50665889!
isInAnyPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyPortfolioFromCurrentPortfolio: aPortfolio]].! !

!methodRemoval: Portfolio #searchPortfolioFromCurrentPortfolio: stamp: 'FK 10/18/2023 22:14:57'!
searchPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyPortfolioFromCurrentPortfolio: aPortfolio]].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:15:53'!
isAnyPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isInAnyPortfolioFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:15:53' prior: 50665907!
isPortfolioAlreadyRegistered: aPortfolio
	(self isTopMostPortfolio) 
		ifTrue: [^self  isAnyPortfolioFromCurrentPortfolio: aPortfolio]
		ifFalse: [^parent isPortfolioAlreadyRegistered: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:15:53' prior: 50665917!
isInAnyPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isAnyPortfolioFromCurrentPortfolio: aPortfolio]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:15:53' prior: 50665934!
isAnyPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isAnyPortfolioFromCurrentPortfolio: aPortfolio]].! !

!methodRemoval: Portfolio #isInAnyPortfolioFromCurrentPortfolio: stamp: 'FK 10/18/2023 22:15:53'!
isInAnyPortfolioFromCurrentPortfolio: aPortfolio
	^(self = aPortfolio) 
		or: [portfolios anySatisfy: [:portfolio | portfolio isAnyPortfolioFromCurrentPortfolio: aPortfolio]].!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:15:55'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:16:52'!
isAccountInAnyPortfolioFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [portfolios anySatisfy: [:portfolio | portfolio searchAccountFromCurrentPortfolio: anAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:16:52' prior: 50665481!
accountIsInAnyPortfolio: anAccount
	 (self isTopMostPortfolio)
		 ifTrue: [^self isAccountInAnyPortfolioFromCurrentPortfolio: anAccount]
		 ifFalse: [^parent accountIsInAnyPortfolio: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:16:52' prior: 50665801!
searchAccountFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [portfolios anySatisfy: [:portfolio | portfolio isAccountInAnyPortfolioFromCurrentPortfolio: anAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:16:52' prior: 50666058!
isAccountInAnyPortfolioFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [portfolios anySatisfy: [:portfolio | portfolio isAccountInAnyPortfolioFromCurrentPortfolio: anAccount]]! !

!methodRemoval: Portfolio #searchAccountFromCurrentPortfolio: stamp: 'FK 10/18/2023 22:16:52'!
searchAccountFromCurrentPortfolio: anAccount
	^(accounts includes: anAccount)
		 or: [portfolios anySatisfy: [:portfolio | portfolio isAccountInAnyPortfolioFromCurrentPortfolio: anAccount]]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:16:54'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:24:04'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:25:07'!
isTransactionInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:25:07' prior: 50654971!
hasRegistered: aTransaction
	^(self isTransactionInAccounts: aTransaction) or: [self isInPortfolios: aTransaction].! !

!methodRemoval: Portfolio #isInAccounts: stamp: 'FK 10/18/2023 22:25:07'!
isInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:25:27'!
isTransactionInPortfolios: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [ :foundPortfolio | ^true] 
		ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:25:27' prior: 50666272!
hasRegistered: aTransaction
	^(self isTransactionInAccounts: aTransaction) or: [self isTransactionInPortfolios: aTransaction].! !

!methodRemoval: Portfolio #isInPortfolios: stamp: 'FK 10/18/2023 22:25:27'!
isInPortfolios: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [ :foundPortfolio | ^true] 
		ifNone: [^false]!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:25:30'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:26:01'!
isTransactionInAnyAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:26:01' prior: 50666295!
hasRegistered: aTransaction
	^(self isTransactionInAnyAccounts: aTransaction) or: [self isTransactionInPortfolios: aTransaction].! !

!methodRemoval: Portfolio #isTransactionInAccounts: stamp: 'FK 10/18/2023 22:26:01'!
isTransactionInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:26:15'!
isTransactionInAnyAccount: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:26:15' prior: 50666398!
hasRegistered: aTransaction
	^(self isTransactionInAnyAccount: aTransaction) or: [self isTransactionInPortfolios: aTransaction].! !

!methodRemoval: Portfolio #isTransactionInAnyAccounts: stamp: 'FK 10/18/2023 22:26:15'!
isTransactionInAnyAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:27:02'!
isTransactionInAnyPortfolio: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [ :foundPortfolio | ^true] 
		ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:27:02' prior: 50666422!
hasRegistered: aTransaction
	^(self isTransactionInAnyAccount: aTransaction) or: [self isTransactionInAnyPortfolio: aTransaction].! !

!methodRemoval: Portfolio #isTransactionInPortfolios: stamp: 'FK 10/18/2023 22:27:02'!
isTransactionInPortfolios: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [ :foundPortfolio | ^true] 
		ifNone: [^false]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:27:57'!
isTransactionInAccounts: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:27:57' prior: 50666446!
hasRegistered: aTransaction
	^(self isTransactionInAccounts: aTransaction) or: [self isTransactionInAnyPortfolio: aTransaction].! !

!methodRemoval: Portfolio #isTransactionInAnyAccount: stamp: 'FK 10/18/2023 22:27:57'!
isTransactionInAnyAccount: aTransaction
	accounts
		detect: [ :anAccount | anAccount hasRegistered: aTransaction]
		ifFound: [ :foundAccount | ^true] 
		ifNone: [^false].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:28:31'!
isTransactionInPortfolios: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [ :foundPortfolio | ^true] 
		ifNone: [^false]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:28:31' prior: 50666470!
hasRegistered: aTransaction
	^(self isTransactionInAccounts: aTransaction) or: [self isTransactionInPortfolios: aTransaction].! !

!methodRemoval: Portfolio #isTransactionInAnyPortfolio: stamp: 'FK 10/18/2023 22:28:31'!
isTransactionInAnyPortfolio: aTransaction
	portfolios 
		detect: [ :portfolio | portfolio hasRegistered: aTransaction]
		ifFound: [ :foundPortfolio | ^true] 
		ifNone: [^false]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:32:31' prior: 50666461!
isTransactionInAccounts: aTransaction
	accounts anySatisfy: [ :anAccount | anAccount hasRegistered: aTransaction].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:32:34'!
ERROR!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:32:34'!
ERROR!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:32:34'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:32:34'!
ERROR!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:32:34'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:32:48' prior: 50666510!
isTransactionInAccounts: aTransaction
	^accounts anySatisfy: [ :anAccount | anAccount hasRegistered: aTransaction].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:32:50'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:33:13' prior: 50666485!
isTransactionInPortfolios: aTransaction
	^portfolios anySatisfy: [ :portfolio | portfolio hasRegistered: aTransaction]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:33:20' prior: 50666682!
isTransactionInPortfolios: aTransaction
	^portfolios anySatisfy: [ :portfolio | portfolio hasRegistered: aTransaction].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:33:22' prior: 50666689!
isTransactionInPortfolios: aTransaction
	^portfolios anySatisfy: [ :portfolio | portfolio hasRegistered: aTransaction].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:33:24'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:34:01'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:34:02'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:34:02'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:34:02'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:34:02'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:34:02'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:34:02'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:35:20'!
balanceInAccounts
	^accounts inject: 0 into: [:balance :account | account addToBalance: balance].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:35:24'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:35:58'!
balanceInPortfolios
	^portfolios inject: 0 into: [:balance :portfolio | portfolio addToBalance: balance].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:36:28' prior: 50657516!
balance
	^self balanceInAccounts + self balanceInPortfolios.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:36:30'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:36:54'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:41:19'!
test23AddingAPortfolioWithAlreadyKnownAccountFails
	| portfolio1 portfolio2 account1 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio1 addPortfolio: account1.
	portfolio2 addPortfolio: account1.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 22:41:29'!
ERROR!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 22:41:29'!
ERROR!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 22:41:34'!
ERROR!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 22:41:34'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:42:08' prior: 50667116!
test23AddingAPortfolioWithAlreadyKnownAccountFails
	| portfolio1 portfolio2 account1 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account1.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 22:42:13'!
FAILURE!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 22:42:13'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:53:42' prior: 50663696!
addPortfolio: aPortfolio
	self checkIsPortfolio: aPortfolio.	
	self checkPortfolioIsNotAlreadyRegistered: aPortfolio.
	
	aPortfolio mmm: self.
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:55:59'!
mmm: aPortfolio
	accounts anySatisfy: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:56:45' prior: 50667182!
mmm: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 22:57:12'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:57:31' prior: 50667189!
mmm: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:59:02'!
checkIfCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:59:02' prior: 50667172!
addPortfolio: aPortfolio
	self checkIsPortfolio: aPortfolio.	
	self checkPortfolioIsNotAlreadyRegistered: aPortfolio.
	
	aPortfolio checkIfCanBeAddedTo: self.
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!methodRemoval: Portfolio #mmm: stamp: 'FK 10/18/2023 22:59:02'!
mmm: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:01:46' prior: 50667148!
test23AddingAPortfolioWithAlreadyKnownAccountFails
	| portfolio1 portfolio2 account1 account2 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 5).
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:01:58'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:02:19'!
test24AddingAPortfolioWithAlreadyKnownAccountsFails
	| portfolio1 portfolio2 account1 account2 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 5).
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 22:41:19' prior: 50667308!
test23AddingAPortfolioWithAlreadyKnownAccountFails
	| portfolio1 portfolio2 account1 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio1 addPortfolio: account1.
	portfolio2 addPortfolio: account1.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:02:56'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:06'!
ERROR!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:03:06'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:06'!
ERROR!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:12'!
ERROR!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:03:12'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:12'!
ERROR!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:17'!
ERROR!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:17'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:03:37' prior: 50667436!
test23AddingAPortfolioWithAlreadyKnownAccountFails
	| portfolio1 portfolio2 account1 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account1.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:03:38'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:03:42'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:06:26'!
test25AddingAPortfolioWithAlreadyKnownPortfolioFails
	| portfolio1 portfolio2 portfolio3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio3 addPortfolio: portfolio2.
	
	self   should: [portfolio1 addPortfolio: portfolio3]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:06:49'!
FAILURE!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:06:49'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:08:35' prior: 50667285!
checkIfCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].
	portfolios do: [ :anotherPortfolio | aPortfolio checkPortfolioIsNotAlreadyRegistered: anotherPortfolio ].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:08:42'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:11:40' prior: 50667292!
addPortfolio: aPortfolio
	self checkIsPortfolio: aPortfolio.	
	"self checkPortfolioIsNotAlreadyRegistered: aPortfolio."
	
	aPortfolio checkIfCanBeAddedTo: self.
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
FAILURE!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
FAILURE!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
FAILURE!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:11:41'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:11:48' prior: 50667964!
addPortfolio: aPortfolio
	self checkIsPortfolio: aPortfolio.	
	self checkPortfolioIsNotAlreadyRegistered: aPortfolio.
	
	aPortfolio checkIfCanBeAddedTo: self.
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:11:49'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:16:09'!
test26AddingAPortfolioWithAlreadyKnownPortfolioFails
	| portfolio1 portfolio2 portfolio3 portfolio4 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	
	self   should: [portfolio2 addPortfolio: portfolio3]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:16:11'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:16:12'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:26:47'!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio5 addPortfolio: portfolio4.
	portfolio4 addPortfolio: portfolio3.
	
	self   should: [portfolio1 addPortfolio: portfolio5]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:26:50'!
FAILURE!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:26:50'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:30:19' prior: 50667863!
checkIfCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].
	portfolios do: [ :anotherPortfolio | aPortfolio checkPortfolioIsNotAlreadyRegistered: anotherPortfolio ].
	portfolios do: [ :anotherPortfolio | self checkIfCanBeAddedTo: aPortfolio ].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:30:20'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:30:20'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:30:20'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:30:48' prior: 50668311!
checkIfCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].
	portfolios do: [ :anotherPortfolio | aPortfolio checkPortfolioIsNotAlreadyRegistered: anotherPortfolio ].
	portfolios do: [ :anotherPortfolio | anotherPortfolio checkIfCanBeAddedTo: aPortfolio ].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:30:57'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:31:00'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:31:01'!
PASSED!

----SNAPSHOT----(18 October 2023 23:35:30) CuisUniversity-5981.image priorSource: 10567118!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:46:13'!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:46:34'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:46:34'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:47:08' prior: 50668547!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:47:11'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:47:11'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:47:26' prior: 50668692!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio2 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:47:40' prior: 50668837!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio2 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:47:41'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:47:41'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:47:48' prior: 50668878!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio2 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: ['hola'].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:47:49'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:48:26' prior: 50669023!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:48:27'!
FAILURE!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:48:53'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:49:13' prior: 50669066!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		description: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:49:13'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:49:13'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:49:20' prior: 50669113!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:49:21'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:49:39' prior: 50669258!
test28MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:49:40'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:49:40'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:50:15' prior: 50651216!
test05OnlyAccountsCanBeRegisteredWithRegisterAccount
	self
	should:  [Portfolio new addAccount: 1] 
	raise: Error 
	withMessageText: [Portfolio notAnAccountOrPortfolioErrorDescription].! !

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:50:17'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:50:17'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:50:25' prior: 50651281!
test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio
	self
	should:  [Portfolio new addPortfolio: 1] 
	raise: Error 
	withMessageText: [Portfolio notAnAccountOrPortfolioErrorDescription].! !

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:50:26'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:50:26'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:50:51' prior: 50657999!
test14AddingRegisteredAccountToPortfolioFails
	| portfolio1 account1 |
	portfolio1 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:50:54'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:51:04' prior: 50658114!
test15AddingAccountThatIsAlreadyOnANestedPortfolioFails
	| portfolio1 account1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:51:05'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:51:05'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:51:13' prior: 50658357!
test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails
	| portfolio1 account1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio2 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:51:14'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:51:15'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:51:15'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:51:28' prior: 50659097!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails
	| portfolio1 account1 portfolio2 portfolio3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio3 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:51:36' prior: 50659962!
test18AddingAnAlreadyKnownPortfolioFails
	| portfolio1 portfolio2  |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:51:43' prior: 50660059!
test19AddingAnAlreadyKnownNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio1 addPortfolio: portfolio3]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:51:49' prior: 50660499!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3  portfolio4|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio4.
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:51:55' prior: 50661876!
test21AddingAnAlreadyKnownParentPortfolioFails
	| portfolio1 portfolio2|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio2 addPortfolio: portfolio1]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:52:02' prior: 50661991!
test22AddingAnAlreadyKnownUpperParentPortfolioFails
	| portfolio1 portfolio2 portfolio3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	
	self   should: [portfolio3 addPortfolio: portfolio1]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:52:09' prior: 50667645!
test23AddingAPortfolioWithAlreadyKnownAccountFails
	| portfolio1 portfolio2 account1 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account1.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:52:15' prior: 50667415!
test24AddingAPortfolioWithAlreadyKnownAccountsFails
	| portfolio1 portfolio2 account1 account2 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 10).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 5).
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:52:22' prior: 50667839!
test25AddingAPortfolioWithAlreadyKnownPortfolioFails
	| portfolio1 portfolio2 portfolio3 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio3 addPortfolio: portfolio2.
	
	self   should: [portfolio1 addPortfolio: portfolio3]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:52:24'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:52:24'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:52:34' prior: 50668166!
test26AddingAPortfolioWithAlreadyKnownPortfolioFails
	| portfolio1 portfolio2 portfolio3 portfolio4 |
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	
	self   should: [portfolio2 addPortfolio: portfolio3]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:52:40' prior: 50668282!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5|
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio5 addPortfolio: portfolio4.
	portfolio4 addPortfolio: portfolio3.
	
	self   should: [portfolio1 addPortfolio: portfolio5]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:52:42'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:54:05'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:54:05'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/18/2023 23:59:52'!
test29MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/18/2023 23:59:54'!
PASSED!

!methodRemoval: Deposit #value stamp: 'FK 10/19/2023 00:04:37'!
value

	^ value!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:04:41'!
ERROR!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:04:41'!
ERROR!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:04:41'!
ERROR!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:04:41'!
ERROR!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:04:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FK 10/19/2023 00:04:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FK 10/19/2023 00:04:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FK 10/19/2023 00:04:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FK 10/19/2023 00:04:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FK 10/19/2023 00:04:53'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FK 10/19/2023 00:04:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FK 10/19/2023 00:04:53'!
ERROR!
!Deposit methodsFor: 'nil' stamp: 'FK 10/19/2023 00:05:16' overrides: 50650420!
value
	^value.! !

----SNAPSHOT----(19 October 2023 00:23:02) CuisUniversity-5981.image priorSource: 10780564!
!Portfolio methodsFor: 'private - testing' stamp: 'FK 10/19/2023 00:26:20'!
verifyAllPortfoliosAndAccountsCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].
	portfolios do: [ :anotherPortfolio | aPortfolio checkPortfolioIsNotAlreadyRegistered: anotherPortfolio ].
	portfolios do: [ :anotherPortfolio | anotherPortfolio checkIfCanBeAddedTo: aPortfolio ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:26:20' prior: 50668334!
checkIfCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].
	portfolios do: [ :anotherPortfolio | aPortfolio checkPortfolioIsNotAlreadyRegistered: anotherPortfolio ].
	portfolios do: [ :anotherPortfolio | anotherPortfolio verifyAllPortfoliosAndAccountsCanBeAddedTo: aPortfolio ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:26:20' prior: 50668065!
addPortfolio: aPortfolio
	self checkIsPortfolio: aPortfolio.	
	self checkPortfolioIsNotAlreadyRegistered: aPortfolio.
	
	aPortfolio verifyAllPortfoliosAndAccountsCanBeAddedTo: self.
	
	aPortfolio addToAPortfolio: self.
	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:26:20' prior: 50670731!
verifyAllPortfoliosAndAccountsCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].
	portfolios do: [ :anotherPortfolio | aPortfolio checkPortfolioIsNotAlreadyRegistered: anotherPortfolio ].
	portfolios do: [ :anotherPortfolio | anotherPortfolio verifyAllPortfoliosAndAccountsCanBeAddedTo: aPortfolio ].! !

!methodRemoval: Portfolio #checkIfCanBeAddedTo: stamp: 'FK 10/19/2023 00:26:20'!
checkIfCanBeAddedTo: aPortfolio
	accounts do: [ :anAccount | aPortfolio checkAccountIsNotAlreadyRegistered: anAccount ].
	portfolios do: [ :anotherPortfolio | aPortfolio checkPortfolioIsNotAlreadyRegistered: anotherPortfolio ].
	portfolios do: [ :anotherPortfolio | anotherPortfolio verifyAllPortfoliosAndAccountsCanBeAddedTo: aPortfolio ].!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:26:24'!
PASSED!

TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:36:39' prior: 50670444!
test29MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3 portfolio10 |
	
	portfolio10 := (Portfolio new).
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:36:49' prior: 50670907!
test29MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3  |
	
	portfolio10 := (Portfolio new).
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:36:49'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:43:58'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:00'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:01'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:02'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:03'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:04'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:04'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:05'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:44:06'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'nil' stamp: 'FK 10/19/2023 00:43:55' overrides: 16961394!
setUp
	portfolio11 := (Portfolio new).
	portfolio12 := (Portfolio new).
	portfolio13 := (Portfolio new).
	portfolio14 := (Portfolio new).
	portfolio15 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:45:16'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:45:17'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:45:18'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio10 portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:45:15' prior: 50671088 overrides: 16961394!
setUp
	portfolio11 := (Portfolio new).
	portfolio12 := (Portfolio new).
	portfolio13 := (Portfolio new).
	portfolio14 := (Portfolio new).
	portfolio15 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:45:28' prior: 50670950!
test29MultiplePortfolios
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6
	  portfolio7 portfolio8 portfolio9 account1 account2 account3  |
	
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio9 := (Portfolio new).
	account1 := (ReceptiveAccount new) register: (Deposit for: 50).
	account2 := (ReceptiveAccount new) register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	account3 := (ReceptiveAccount new) register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:45:36'!
PASSED!

TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 00:45:44'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio11 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:45:49'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:45:49'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:46:33' prior: 50650935!
test02BalancePortfolioWith1Account

	account11 register: (Deposit for: 10).
	portfolio11 addAccount: account11.
	self assert: (portfolio11 balance) equals: 10.
	! !

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:46:38'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:48:10' prior: 50650862!
test03BalancePortfolioWith1Porfolio
	
	account11 register: (Deposit for: 10).
	portfolio12 addAccount: account11.
	portfolio11 addPortfolio: portfolio12.
	
	self assert: (portfolio11 balance) equals: 10.! !

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:48:11'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:48:12'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:48:12'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:48:12'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:48:12'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:48:12'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:48:12'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:48:12'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:48:12'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:50:06' prior: 50650979!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	
	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	account12 register: (Withdraw for: 15).

	portfolio12 addPortfolio: portfolio13.
	portfolio12 addAccount: account12.
	portfolio12 addAccount: account13.
	portfolio11 addPortfolio: portfolio12.
	portfolio11 addAccount: account11.
	self assert: (portfolio11 balance) equals: 40.! !

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:50:08'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:50:44'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:50:44'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:52:21' prior: 50654578!
test08HasRegisteredWith1Account
	| transaction |
	transaction := Deposit for: 1.
	account11 register: transaction.
	portfolio11 addAccount: account11.
	self assert: (portfolio11 hasRegistered: transaction).! !

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:52:22'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:52:22'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:52:54' prior: 50654651!
test09HasRegisteredWith1PortfolioThatHas1Account
	| transaction |

	transaction := Deposit for: 1.
	account11 register: transaction.
	portfolio11 addAccount: account11.
	portfolio12 addPortfolio: portfolio11.
	self assert: (portfolio12 hasRegistered: transaction).! !

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:52:56'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:52:56'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:54:05' prior: 50655040!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts

	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	account12 register: (Withdraw for: 15).

	portfolio12 addPortfolio: portfolio13.
	portfolio12 addAccount: account12.
	portfolio12 addAccount: account13.
	portfolio11 addPortfolio: portfolio12.
	portfolio11 addAccount: account11.
	self assert: (portfolio11 hasRegistered: (Withdraw for: 15)).! !

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:54:18'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:54:38'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:55:40' prior: 50672027!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| transaction |

	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	transaction := (Withdraw for: 15).
	account12 register: transaction.
	portfolio12 addPortfolio: portfolio13.
	portfolio12 addAccount: account12.
	portfolio12 addAccount: account13.
	portfolio11 addPortfolio: portfolio12.
	portfolio11 addAccount: account11.
	self assert: (portfolio11 hasRegistered: transaction).! !

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:55:42'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:55:42'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:56:14' prior: 50656596!
test12OneTransactionInPortfolio
	| transaction |

	transaction := Deposit for: 50.
	account11 register: transaction.
	portfolio11 addAccount: account11.
	self assert: (portfolio11 transactions) equals: (OrderedCollection with: transaction ).! !

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:56:20'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:56:20'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:57:39' prior: 50656869!
test13OneTransactionNestedInPortfolio
	| transaction1 transaction2 transaction3 expectedTransactions |

	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account11 register: transaction1.
	account12 register: transaction2.
	account12 register: transaction3.
	portfolio12 addPortfolio: portfolio13.
	portfolio12 addAccount: account12.
	portfolio12 addAccount: account13.
	portfolio11 addPortfolio: portfolio12.
	portfolio11 addAccount: account11.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio11 transactions) equals: expectedTransactions.! !

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:57:40'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:57:40'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:58:00' prior: 50669677!
test14AddingRegisteredAccountToPortfolioFails

	account11 register: (Deposit for: 1).
	portfolio11 addAccount: account11.
	self   should: [portfolio11 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:58:10'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:58:10'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:58:37' prior: 50669695!
test15AddingAccountThatIsAlreadyOnANestedPortfolioFails

	account11  register: (Deposit for: 1).
	portfolio12 addAccount: account11.
	portfolio11 addPortfolio: portfolio12.
	self   should: [portfolio11 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:58:39'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:58:39'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:59:02' prior: 50669817!
test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails

	account11 register: (Deposit for: 1).
	portfolio11 addAccount: account11.
	portfolio11 addPortfolio: portfolio12.
	self   should: [portfolio12 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:59:04'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:59:04'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:59:33' prior: 50669939!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails

	account11 register: (Deposit for: 1).
	portfolio11 addAccount: account11.
	portfolio11 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	self   should: [portfolio13 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:59:34'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:59:34'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 00:59:49' prior: 50669959!
test18AddingAnAlreadyKnownPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	self   should: [portfolio11 addPortfolio: portfolio12 ]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 00:59:50'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 00:59:50'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:00:05' prior: 50669973!
test19AddingAnAlreadyKnownNestedPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	self   should: [portfolio11 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:00:20' prior: 50669989!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	portfolio13 addPortfolio: portfolio14.
	self   should: [portfolio11 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:00:23'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:00:23'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:00:35' prior: 50670008!
test21AddingAnAlreadyKnownParentPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	self   should: [portfolio12 addPortfolio: portfolio11]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:00:37'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:00:37'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:00:51' prior: 50670022!
test22AddingAnAlreadyKnownUpperParentPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	
	self   should: [portfolio13 addPortfolio: portfolio11]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:00:54'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:01:12' prior: 50670038!
test23AddingAPortfolioWithAlreadyKnownAccountFails

	account11 register: (Deposit for: 10).
	portfolio11 addAccount: account11.
	portfolio12 addAccount: account11.
	
	self   should: [portfolio11 addPortfolio: portfolio12]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:01:13'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:01:13'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:01:45' prior: 50670055!
test24AddingAPortfolioWithAlreadyKnownAccountsFails

	account11 register: (Deposit for: 10).
	account12 register: (Withdraw for: 5).
	portfolio11 addAccount: account11.
	portfolio11 addAccount: account12.
	portfolio12 addAccount: account11.
	portfolio12 addAccount: account12.
	
	self   should: [portfolio11 addPortfolio: portfolio12]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:01:49'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:01:49'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:02:09' prior: 50670076!
test25AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	portfolio13 addPortfolio: portfolio12.
	
	self   should: [portfolio11 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:02:10'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:02:10'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:02:27' prior: 50670197!
test26AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio14.
	portfolio13 addPortfolio: portfolio14.
	
	self   should: [portfolio12 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:02:29'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:02:29'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:02:51' prior: 50670216!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails

	portfolio11 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	portfolio15 addPortfolio: portfolio14.
	portfolio14 addPortfolio: portfolio13.
	
	self   should: [portfolio11 addPortfolio: portfolio15]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:02:55'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:02:55'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:04:02' prior: 50669302!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio11 addAccount: account11.
	portfolio11 addPortfolio: portfolio12.
	portfolio12 addAccount: account12.
	portfolio12 addPortfolio: portfolio13.
	
	portfolio14 := (Portfolio new).
	portfolio15 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio11 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:04:03'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:04:03'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:12' prior: 50671154!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio11 addAccount: account11.
	portfolio11 addPortfolio: portfolio12.
	portfolio12 addAccount: account12.
	portfolio12 addPortfolio: portfolio13.
	portfolio13 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio11 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:05:13'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:05:13'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:27' prior: 50674022!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio11 addAccount: account11.
	portfolio11 addPortfolio: portfolio12.
	portfolio12 addAccount: account12.
	portfolio12 addPortfolio: portfolio13.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio11 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:05:32'!
PASSED!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:05:43'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio12 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50671557!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	
	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	account12 register: (Withdraw for: 15).

	portfolio12 addPortfolio: portfolio13.
	portfolio12 addAccount: account12.
	portfolio12 addAccount: account13.
	portfolio1 addPortfolio: portfolio12.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 balance) equals: 40.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50672537!
test14AddingRegisteredAccountToPortfolioFails

	account11 register: (Deposit for: 1).
	portfolio1 addAccount: account11.
	self   should: [portfolio1 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50672901!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails

	account11 register: (Deposit for: 1).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	self   should: [portfolio13 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50672402!
test13OneTransactionNestedInPortfolio
	| transaction1 transaction2 transaction3 expectedTransactions |

	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account11 register: transaction1.
	account12 register: transaction2.
	account12 register: transaction3.
	portfolio12 addPortfolio: portfolio13.
	portfolio12 addAccount: account12.
	portfolio12 addAccount: account13.
	portfolio1 addPortfolio: portfolio12.
	portfolio1 addAccount: account11.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions) equals: expectedTransactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50671427!
test02BalancePortfolioWith1Account

	account11 register: (Deposit for: 10).
	portfolio1 addAccount: account11.
	self assert: (portfolio1 balance) equals: 10.
	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673276!
test21AddingAnAlreadyKnownParentPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	self   should: [portfolio12 addPortfolio: portfolio1]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673154!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	portfolio13 addPortfolio: portfolio14.
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673411!
test23AddingAPortfolioWithAlreadyKnownAccountFails

	account11 register: (Deposit for: 10).
	portfolio1 addAccount: account11.
	portfolio12 addAccount: account11.
	
	self   should: [portfolio1 addPortfolio: portfolio12]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50672156!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| transaction |

	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	transaction := (Withdraw for: 15).
	account12 register: transaction.
	portfolio12 addPortfolio: portfolio13.
	portfolio12 addAccount: account12.
	portfolio12 addAccount: account13.
	portfolio1 addPortfolio: portfolio12.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50672779!
test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails

	account11 register: (Deposit for: 1).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio12.
	self   should: [portfolio12 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673395!
test22AddingAnAlreadyKnownUpperParentPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	
	self   should: [portfolio13 addPortfolio: portfolio1]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673657!
test25AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	portfolio13 addPortfolio: portfolio12.
	
	self   should: [portfolio1 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673777!
test26AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio14.
	portfolio13 addPortfolio: portfolio14.
	
	self   should: [portfolio12 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673024!
test18AddingAnAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	self   should: [portfolio1 addPortfolio: portfolio12 ]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673899!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	portfolio15 addPortfolio: portfolio14.
	portfolio14 addPortfolio: portfolio13.
	
	self   should: [portfolio1 addPortfolio: portfolio15]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673142!
test19AddingAnAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio12.
	portfolio12 addPortfolio: portfolio13.
	self   should: [portfolio1 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50671439!
test03BalancePortfolioWith1Porfolio
	
	account11 register: (Deposit for: 10).
	portfolio12 addAccount: account11.
	portfolio1 addPortfolio: portfolio12.
	
	self assert: (portfolio1 balance) equals: 10.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50671907!
test09HasRegisteredWith1PortfolioThatHas1Account
	| transaction |

	transaction := Deposit for: 1.
	account11 register: transaction.
	portfolio1 addAccount: account11.
	portfolio12 addPortfolio: portfolio1.
	self assert: (portfolio12 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50672657!
test15AddingAccountThatIsAlreadyOnANestedPortfolioFails

	account11  register: (Deposit for: 1).
	portfolio12 addAccount: account11.
	portfolio1 addPortfolio: portfolio12.
	self   should: [portfolio1 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50674294!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio12.
	portfolio12 addAccount: account12.
	portfolio12 addPortfolio: portfolio13.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50674161!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio12.
	portfolio12 addAccount: account12.
	portfolio12 addPortfolio: portfolio13.
	portfolio13 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50671790!
test08HasRegisteredWith1Account
	| transaction |
	transaction := Deposit for: 1.
	account11 register: transaction.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50673532!
test24AddingAPortfolioWithAlreadyKnownAccountsFails

	account11 register: (Deposit for: 10).
	account12 register: (Withdraw for: 5).
	portfolio1 addAccount: account11.
	portfolio1 addAccount: account12.
	portfolio12 addAccount: account11.
	portfolio12 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio12]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50672283!
test12OneTransactionInPortfolio
	| transaction |

	transaction := Deposit for: 50.
	account11 register: transaction.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: transaction ).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:05:43' prior: 50671137 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio12 := (Portfolio new).
	portfolio13 := (Portfolio new).
	portfolio14 := (Portfolio new).
	portfolio15 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:00'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio13 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674465!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails

	account11 register: (Deposit for: 1).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio13.
	self   should: [portfolio13 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674516!
test21AddingAnAlreadyKnownParentPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio2 addPortfolio: portfolio1]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674683!
test15AddingAccountThatIsAlreadyOnANestedPortfolioFails

	account11  register: (Deposit for: 1).
	portfolio2 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674696!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio13.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674661!
test03BalancePortfolioWith1Porfolio
	
	account11 register: (Deposit for: 10).
	portfolio2 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 balance) equals: 10.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674758!
test24AddingAPortfolioWithAlreadyKnownAccountsFails

	account11 register: (Deposit for: 10).
	account12 register: (Withdraw for: 5).
	portfolio1 addAccount: account11.
	portfolio1 addAccount: account12.
	portfolio2 addAccount: account11.
	portfolio2 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674572!
test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails

	account11 register: (Deposit for: 1).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio2 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674480!
test13OneTransactionNestedInPortfolio
	| transaction1 transaction2 transaction3 expectedTransactions |

	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account11 register: transaction1.
	account12 register: transaction2.
	account12 register: transaction3.
	portfolio2 addPortfolio: portfolio13.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account11.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions) equals: expectedTransactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674609!
test26AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio14.
	portfolio13 addPortfolio: portfolio14.
	
	self   should: [portfolio2 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674623!
test18AddingAnAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674671!
test09HasRegisteredWith1PortfolioThatHas1Account
	| transaction |

	transaction := Deposit for: 1.
	account11 register: transaction.
	portfolio1 addAccount: account11.
	portfolio2 addPortfolio: portfolio1.
	self assert: (portfolio2 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674554!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| transaction |

	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	transaction := (Withdraw for: 15).
	account12 register: transaction.
	portfolio2 addPortfolio: portfolio13.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674634!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio13.
	portfolio15 addPortfolio: portfolio14.
	portfolio14 addPortfolio: portfolio13.
	
	self   should: [portfolio1 addPortfolio: portfolio15]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674541!
test23AddingAPortfolioWithAlreadyKnownAccountFails

	account11 register: (Deposit for: 10).
	portfolio1 addAccount: account11.
	portfolio2 addAccount: account11.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674597!
test25AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio13 addPortfolio: portfolio2.
	
	self   should: [portfolio1 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674585!
test22AddingAnAlreadyKnownUpperParentPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio13.
	
	self   should: [portfolio13 addPortfolio: portfolio1]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674436!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	
	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	account12 register: (Withdraw for: 15).

	portfolio2 addPortfolio: portfolio13.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 balance) equals: 40.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674722!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio13.
	portfolio13 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674649!
test19AddingAnAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio13.
	self   should: [portfolio1 addPortfolio: portfolio13]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674787 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio13 := (Portfolio new).
	portfolio14 := (Portfolio new).
	portfolio15 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:00' prior: 50674527!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio13.
	portfolio13 addPortfolio: portfolio14.
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:09'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio14 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50674921!
test13OneTransactionNestedInPortfolio
	| transaction1 transaction2 transaction3 expectedTransactions |

	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account11 register: transaction1.
	account12 register: transaction2.
	account12 register: transaction3.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account11.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions) equals: expectedTransactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675127!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio14.
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675110 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio14 := (Portfolio new).
	portfolio15 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675055!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	
	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	account12 register: (Withdraw for: 15).

	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 balance) equals: 40.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675097!
test19AddingAnAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio1 addPortfolio: portfolio3]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50674816!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails

	account11 register: (Deposit for: 1).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio3 addAccount: account11]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675071!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675043!
test22AddingAnAlreadyKnownUpperParentPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	
	self   should: [portfolio3 addPortfolio: portfolio1]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50674855!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio14 addPortfolio: portfolio15.
	portfolio14 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio14]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50674948!
test26AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio14.
	portfolio3 addPortfolio: portfolio14.
	
	self   should: [portfolio2 addPortfolio: portfolio3]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675003!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio15 addPortfolio: portfolio14.
	portfolio14 addPortfolio: portfolio3.
	
	self   should: [portfolio1 addPortfolio: portfolio15]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50674985!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| transaction |

	account11 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	transaction := (Withdraw for: 15).
	account12 register: transaction.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account11.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:09' prior: 50675031!
test25AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio3 addPortfolio: portfolio2.
	
	self   should: [portfolio1 addPortfolio: portfolio3]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:17'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio15 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:17' prior: 50675179!
test20AddingAnAlreadyKnownDoublyNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio4.
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:17' prior: 50675317!
test26AddingAPortfolioWithAlreadyKnownPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	
	self   should: [portfolio2 addPortfolio: portfolio3]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:17' prior: 50675193 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio15 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:17' prior: 50675331!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio15 addPortfolio: portfolio4.
	portfolio4 addPortfolio: portfolio3.
	
	self   should: [portfolio1 addPortfolio: portfolio15]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:17' prior: 50675291!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio15.
	portfolio4 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:17' prior: 50675253!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio15.
	portfolio4 addPortfolio: portfolio16.
	portfolio15 addAccount: account13.
	portfolio15 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:25'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio16 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:25' prior: 50675432!
test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	portfolio5 addPortfolio: portfolio4.
	portfolio4 addPortfolio: portfolio3.
	
	self   should: [portfolio1 addPortfolio: portfolio5]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:25' prior: 50675473!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio16.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:25' prior: 50675415 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio16 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:25' prior: 50675447!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio16.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio17.
	portfolio16 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:33'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 portfolio17 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:33' prior: 50675553 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio17 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:33' prior: 50675570!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio17.
	portfolio6 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:33' prior: 50675526!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio17.
	portfolio6 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:40'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 portfolio7 portfolio18 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:40' prior: 50675608 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio18 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:40' prior: 50675625!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:40' prior: 50675651!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio18.
	portfolio18 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:48'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 portfolio7 portfolio8 portfolio19 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:48' prior: 50675689 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio19 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:48' prior: 50675706!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio19.
	portfolio19 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:48' prior: 50675732!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio19.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio19.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:06:55'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 portfolio7 portfolio8 portfolio9 account11 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:55' prior: 50675770 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	
	account11 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:55' prior: 50675787!
test28MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:06:55' prior: 50675813!
test29MultiplePortfolios

	account11 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account11.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:07:02'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 portfolio7 portfolio8 portfolio9 account1 account12 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675152!
test13OneTransactionNestedInPortfolio
	| transaction1 transaction2 transaction3 expectedTransactions |

	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 register: transaction1.
	account12 register: transaction2.
	account12 register: transaction3.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions) equals: expectedTransactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674973!
test09HasRegisteredWith1PortfolioThatHas1Account
	| transaction |

	transaction := Deposit for: 1.
	account1 register: transaction.
	portfolio1 addAccount: account1.
	portfolio2 addPortfolio: portfolio1.
	self assert: (portfolio2 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675210!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	
	account1 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	account12 register: (Withdraw for: 15).

	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 balance) equals: 40.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674881!
test03BalancePortfolioWith1Porfolio
	
	account1 register: (Deposit for: 10).
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 balance) equals: 10.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674507!
test02BalancePortfolioWith1Account

	account1 register: (Deposit for: 10).
	portfolio1 addAccount: account1.
	self assert: (portfolio1 balance) equals: 10.
	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675851 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	
	account1 := (ReceptiveAccount new).
	account12 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675346!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| transaction |

	account1 register: (Deposit for: 25).
	account12 register: (Deposit for: 30).
	transaction := (Withdraw for: 15).
	account12 register: transaction.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account12.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674842!
test15AddingAccountThatIsAlreadyOnANestedPortfolioFails

	account1  register: (Deposit for: 1).
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674775!
test12OneTransactionInPortfolio
	| transaction |

	transaction := Deposit for: 50.
	account1 register: transaction.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: transaction ).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674908!
test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails

	account1 register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	self   should: [portfolio2 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674748!
test08HasRegisteredWith1Account
	| transaction |
	transaction := Deposit for: 1.
	account1 register: transaction.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675018!
test23AddingAPortfolioWithAlreadyKnownAccountFails

	account1 register: (Deposit for: 10).
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account1.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674453!
test14AddingRegisteredAccountToPortfolioFails

	account1 register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	self   should: [portfolio1 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675893!
test29MultiplePortfolios

	account1 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50674891!
test24AddingAPortfolioWithAlreadyKnownAccountsFails

	account1 register: (Deposit for: 10).
	account12 register: (Withdraw for: 5).
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account12.
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675238!
test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails

	account1 register: (Deposit for: 1).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.
	self   should: [portfolio3 addAccount: account1]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:02' prior: 50675867!
test28MultiplePortfolios

	account1 register: (Deposit for: 50).
	account12 register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account12.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account12.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:07:14'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 portfolio7 portfolio8 portfolio9 account1 account2 account13'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:14' prior: 50675930!
test13OneTransactionNestedInPortfolio
	| transaction1 transaction2 transaction3 expectedTransactions |

	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 register: transaction1.
	account2 register: transaction2.
	account2 register: transaction3.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions) equals: expectedTransactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:14' prior: 50675969!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	
	account1 register: (Deposit for: 25).
	account2 register: (Deposit for: 30).
	account2 register: (Withdraw for: 15).

	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 balance) equals: 40.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:14' prior: 50676110!
test29MultiplePortfolios

	account1 register: (Deposit for: 50).
	account2 register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:14' prior: 50676004 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	
	account1 := (ReceptiveAccount new).
	account2 := (ReceptiveAccount new).
	account13 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:14' prior: 50676168!
test28MultiplePortfolios

	account1 register: (Deposit for: 50).
	account2 register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	account13 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account13.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:14' prior: 50676020!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| transaction |

	account1 register: (Deposit for: 25).
	account2 register: (Deposit for: 30).
	transaction := (Withdraw for: 15).
	account2 register: transaction.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account13.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:14' prior: 50676136!
test24AddingAPortfolioWithAlreadyKnownAccountsFails

	account1 register: (Deposit for: 10).
	account2 register: (Withdraw for: 5).
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio2]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered].! !

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'FK 10/19/2023 01:07:22'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 portfolio7 portfolio8 portfolio9 account1 account2 account3'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:22' prior: 50676205!
test13OneTransactionNestedInPortfolio
	| transaction1 transaction2 transaction3 expectedTransactions |

	transaction1 := (Deposit for: 25).
	transaction2 := (Deposit for: 30).
	transaction3 := (Withdraw for: 15).
	account1 register: transaction1.
	account2 register: transaction2.
	account2 register: transaction3.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	expectedTransactions := OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	expectedTransactions add: transaction3.
	self assert: (portfolio1 transactions) equals: expectedTransactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:22' prior: 50676290!
test28MultiplePortfolios

	account1 register: (Deposit for: 50).
	account2 register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	
	account3 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	portfolio9 addAccount: account2.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessageAccountIsAlreadyRegistered ].! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:22' prior: 50676274 overrides: 16961394!
setUp
	portfolio1 := (Portfolio new).
	portfolio2 := (Portfolio new).
	portfolio3 := (Portfolio new).
	portfolio4 := (Portfolio new).
	portfolio5 := (Portfolio new).
	portfolio6 := (Portfolio new).
	portfolio7 := (Portfolio new).
	portfolio8 := (Portfolio new).
	portfolio9 := (Portfolio new).
	
	account1 := (ReceptiveAccount new).
	account2 := (ReceptiveAccount new).
	account3 := (ReceptiveAccount new).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:22' prior: 50676232!
test04BalancePortfolioWithMultiplePorfoliosAndAccounts
	
	account1 register: (Deposit for: 25).
	account2 register: (Deposit for: 30).
	account2 register: (Withdraw for: 15).

	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 balance) equals: 40.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:22' prior: 50676315!
test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts
	| transaction |

	account1 register: (Deposit for: 25).
	account2 register: (Deposit for: 30).
	transaction := (Withdraw for: 15).
	account2 register: transaction.
	portfolio2 addPortfolio: portfolio3.
	portfolio2 addAccount: account2.
	portfolio2 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	self assert: (portfolio1 hasRegistered: transaction).! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'FK 10/19/2023 01:07:22' prior: 50676248!
test29MultiplePortfolios

	account1 register: (Deposit for: 50).
	account2 register: (Withdraw for: 20).
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account2.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addPortfolio: portfolio9.
	
	account3 register: (Deposit for: 35).
	portfolio4 addPortfolio: portfolio5.
	portfolio4 addPortfolio: portfolio6.
	portfolio5 addAccount: account3.
	portfolio5 addPortfolio: portfolio7.
	portfolio6 addPortfolio: portfolio8.
	portfolio8 addPortfolio: portfolio9.
	
	self   should: [portfolio1 addPortfolio: portfolio4]
		raise: Error 
		withMessageText: [Portfolio errorMessagePortfolioIsAlreadyRegistered ].! !

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:07:33'!
PASSED!

!testRun: #PortfolioTests #test01ANewPortfolioHas0Balance stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test02BalancePortfolioWith1Account stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test03BalancePortfolioWith1Porfolio stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test04BalancePortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test05OnlyAccountsCanBeRegisteredWithRegisterAccount stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test06OnlyPortfoliosCanBeRegisteredWithRegisterPortfolio stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test07HasRegisteredWith0Accounts stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test08HasRegisteredWith1Account stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test09HasRegisteredWith1PortfolioThatHas1Account stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test10HasRegisteredInPortfolioWithMultiplePorfoliosAndAccounts stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test11TransactionsEmptyPortfolio stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test12OneTransactionInPortfolio stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test13OneTransactionNestedInPortfolio stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test14AddingRegisteredAccountToPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test15AddingAccountThatIsAlreadyOnANestedPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test16AddingAccountToPortfolioWhichItsParentAlreadyHasFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test17AddingAccountToPortfolioWhichItsNestedParentAlreadyHasFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test18AddingAnAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test19AddingAnAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test20AddingAnAlreadyKnownDoublyNestedPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test21AddingAnAlreadyKnownParentPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test22AddingAnAlreadyKnownUpperParentPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test23AddingAPortfolioWithAlreadyKnownAccountFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test24AddingAPortfolioWithAlreadyKnownAccountsFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test25AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test26AddingAPortfolioWithAlreadyKnownPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test27AddingAPortfolioWithAlreadyKnownNestedPortfolioFails stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test28MultiplePortfolios stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #PortfolioTests #test29MultiplePortfolios stamp: 'FK 10/19/2023 01:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FK 10/19/2023 01:09:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FK 10/19/2023 01:09:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FK 10/19/2023 01:09:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FK 10/19/2023 01:09:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FK 10/19/2023 01:09:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FK 10/19/2023 01:09:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FK 10/19/2023 01:09:40'!
PASSED!

----SNAPSHOT----(19 October 2023 01:10:02) CuisUniversity-5981.image priorSource: 10850481!

----SNAPSHOT----(19 October 2023 01:10:05) CuisUniversity-5981.image priorSource: 11042328!

----SNAPSHOT----(19 October 2023 01:10:07) CuisUniversity-5981.image priorSource: 11042421!

----SNAPSHOT----(19 October 2023 01:11:07) CuisUniversity-5981.image priorSource: 11042514!